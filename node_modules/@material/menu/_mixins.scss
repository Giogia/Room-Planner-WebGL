//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@use "sass:math";
@use "@material/elevation/mixins" as elevation-mixins;
@use "@material/feature-targeting/functions";
@use "@material/feature-targeting/mixins" as feature-targeting-mixins;
@use "@material/rtl/mixins" as rtl-mixins;
@use "@material/list/mixins" as list-mixins;
@use "@material/list/variables" as list-variables;
@use "@material/ripple/mixins" as ripple-mixins;
@use "./variables";

@mixin core-styles($query: functions.all()) {
  $feat-color: functions.create-target($query, color);
  $feat-structure: functions.create-target($query, structure);

  @include ripple-mixins.common($query); // COPYBARA_COMMENT_THIS_LINE
  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE

  // Customize the menu-surface and contained list to match the mdc-menu styles.
  .mdc-menu {
    @include list-mixins.item-meta-ink-color(variables.$ink-color, $query);
    @include list-mixins.item-graphic-ink-color(variables.$ink-color, $query);

    @include feature-targeting-mixins.targets($feat-structure) {
      min-width: variables.$min-width;
    }

    // Include mdc-list selector to ensure list-inside-menu overrides default list styles
    .mdc-list {
      @include list-mixins.item-primary-text-ink-color(variables.$ink-color, $query);
      @include elevation-mixins.overlay-surface-position($query: $query);
      @include elevation-mixins.overlay-dimensions(100%, $query: $query);
    }

    .mdc-list-divider {
      @include feature-targeting-mixins.targets($feat-structure) {
        margin: 8px 0;
      }
    }

    .mdc-list-item {
      @include feature-targeting-mixins.targets($feat-structure) {
        user-select: none;
      }
    }

    .mdc-list-item--disabled {
      @include feature-targeting-mixins.targets($feat-structure) {
        cursor: auto;
      }
    }

    //stylelint-disable selector-no-qualifying-type
    a.mdc-list-item .mdc-list-item__text,
    a.mdc-list-item .mdc-list-item__graphic {
      @include feature-targeting-mixins.targets($feat-structure) {
        pointer-events: none;
      }
    }
    // stylelint-enable selector-no-qualifying-type
  }

  // postcss-bem-linter: define menu
  .mdc-menu__selection-group {
    @include feature-targeting-mixins.targets($feat-structure) {
      padding: 0;
      fill: currentColor;
    }

    .mdc-list-item {
      @include feature-targeting-mixins.targets($feat-structure) {
        @include rtl-mixins.reflexive-property(padding, 56px, list-variables.$side-padding);
      }
    }

    // Extra specificity required to override `display` property on `mdc-list-item__graphic`.
    .mdc-menu__selection-group-icon {
      @include feature-targeting-mixins.targets($feat-structure) {
        @include rtl-mixins.reflexive-position(left, 16px);

        display: none;
        position: absolute;
        // IE11 requires the icon to be vertically centered due to its absolute positioning
        top: 50%;
        transform: translateY(-50%);
      }
    }
  }
  // postcss-bem-linter: end

  // stylelint-disable-next-line plugin/selector-bem-pattern
  .mdc-menu-item--selected .mdc-menu__selection-group-icon {
    @include feature-targeting-mixins.targets($feat-structure) {
      display: inline;
    }
  }
}

@mixin width($width, $query: functions.all()) {
  $feat-structure: functions.create-target($query, color);

  @include feature-targeting-mixins.targets($feat-structure) {
    @if math.is-unitless($width) {
      width: $width * variables.$width-base;
    } @else {
      width: $width;
    }
  }
}
