//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@use "sass:list";
@use "sass:string";
@use "@material/floating-label/mixins" as floating-label-mixins;
@use "@material/theme/mixins" as theme-mixins;
@use "@material/shape/mixins" as shape-mixins;
@use "@material/shape/functions";
@use "@material/line-ripple/mixins" as line-ripple-mixins;
@use "@material/notched-outline/mixins" as notched-outline-mixins;
@use "@material/notched-outline/variables" as notched-outline-variables;
@use "@material/ripple/mixins" as ripple-mixins;
@use "./icon/mixins";
@use "./variables";
@use "@material/rtl/mixins" as rtl-mixins;
@use "@material/theme/variables" as theme-variables;
@use "@material/typography/mixins" as typography-mixins;

// Public

@mixin ink-color($color) {
  &:not(.mdc-select--disabled) {
    @include ink-color_($color);
  }
}

@mixin container-fill-color($color) {
  &:not(.mdc-select--disabled) {
    @include container-fill-color_($color);
  }
}

@mixin focused-label-color($color) {
  &:not(.mdc-select--disabled) {
    &.mdc-select--focused .mdc-floating-label {
      @include floating-label-mixins.ink-color(theme-variables.prop-value($color));
    }
  }
}

@mixin hover-bottom-line-color($color) {
  &:not(.mdc-select--disabled):hover {
    @include bottom-line-color_($color);
  }
}

@mixin bottom-line-color($color) {
  &:not(.mdc-select--disabled) {
    @include bottom-line-color_($color);
  }
}

@mixin focused-bottom-line-color($color) {
  &:not(.mdc-select--disabled) {
    @include focused-line-ripple-color_($color);
  }
}

@mixin label-color($color) {
  &:not(.mdc-select--disabled) .mdc-floating-label {
    @include floating-label-mixins.ink-color($color);
  }
}

@mixin outline-color($color) {
  &:not(.mdc-select--disabled) {
    @include outline-color_($color);
  }
}

@mixin hover-outline-color($color) {
  &:not(.mdc-select--disabled) {
    @include hover-outline-color_($color);
  }
}

@mixin focused-outline-color($color) {
  &:not(.mdc-select--disabled) {
    @include focused-outline-color_($color);
  }
}

@mixin shape-radius($radius, $rtl-reflexive: false) {
  @if list.length($radius) > 2 {
    @error "Invalid radius: '#{$radius}' component doesn't allow customizing all corners";
  }

  $masked-radius: functions.mask-radius($radius, 1 1 0 0);

  .mdc-select__anchor {
    @include shape-mixins.radius(functions.resolve-percentage-radius(variables.$height, $masked-radius), $rtl-reflexive);
  }
}

@mixin outline-shape-radius($radius, $rtl-reflexive: false) {
  $resolved-radius: list.nth(functions.resolve-percentage-radius(variables.$height, functions.prop-value($radius)), 1);

  @if (list.length(functions.prop-value($radius)) > 1) {
    // stylelint-disable-next-line max-line-length
    @warn "mdc-select-outline-shape-radius only supports a single radius; see https://github.com/material-components/material-components-web/issues/4140";
  }

  .mdc-notched-outline {
    @include notched-outline-mixins.shape-radius($resolved-radius, $rtl-reflexive);
  }

  .mdc-select__selected-text {
    @include shape-mixins.radius($resolved-radius, $rtl-reflexive);
  }

  @if ($resolved-radius > notched-outline-variables.$leading-width) {
    .mdc-select__selected-text {
      @include rtl-mixins.reflexive-property(
        padding,
        $resolved-radius + notched-outline-variables.$padding,
        variables.$arrow-padding
      );
    }

    + .mdc-select-helper-text {
      @include rtl-mixins.reflexive-property(
        margin,
        $resolved-radius + notched-outline-variables.$padding,
        variables.$outline-label-offset
      );
    }
  }
}

// Private
@mixin focused-line-ripple_ {
  &.mdc-select--focused .mdc-line-ripple {
    @content;
  }
}

@mixin focused-outline_ {
  &.mdc-select--focused .mdc-notched-outline {
    @include notched-outline-mixins.stroke-width(2px);
    @content;
  }
}

@mixin focused-outline-idle_ {
  &.mdc-select--focused {
    @content;
  }
}

@mixin ink-color_($color) {
  .mdc-select__selected-text {
    @include theme-mixins.prop(color, $color);
  }
}

@mixin container-fill-color_($color) {
  .mdc-select__anchor {
    @include theme-mixins.prop(background-color, $color);
  }
}

@mixin bottom-line-color_($color) {
  .mdc-line-ripple {
    @include line-ripple-mixins.inactive-color($color);
  }
}

@mixin focused-line-ripple-color_($color) {
  @include focused-line-ripple_ {
    @include line-ripple-mixins.active-color($color);
  }
}

@mixin dd-arrow-svg-bg_($fill-hex-number, $opacity) {
  // Lookup color and remove leading #.
  $fill-hex-number: theme-variables.prop-value($fill-hex-number);
  $fill-hex-number: string.slice(string.unquote("#{$fill-hex-number}"), 2);

  // stylelint-disable-next-line function-url-quotes
  background: url('data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23#{$fill-hex-number}%22%20fill-rule%3D%22evenodd%22%20opacity%3D%22#{$opacity}%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E')
    no-repeat
    center;
}

@mixin outline-color_($color) {
  @include notched-outline-mixins.color($color);
}

@mixin hover-outline-color_($color) {
  // stylelint-disable-next-line selector-combinator-space-after
  &:not(.mdc-select--focused) .mdc-select__selected-text:hover ~ {
    .mdc-notched-outline {
      @include notched-outline-mixins.color($color);
    }
  }
}

@mixin focused-outline-color_($color) {
  @include focused-outline_ {
    @include notched-outline-mixins.color($color);
  }
}

@mixin floating-label_ {
  .mdc-floating-label {
    @include rtl-mixins.reflexive-position(left, variables.$outline-label-offset);

    top: 21px;
    pointer-events: none;
  }

  &.mdc-select--with-leading-icon {
    .mdc-floating-label {
      @include rtl-mixins.reflexive-position(left, variables.$icon-padding);
    }
  }

  &.mdc-select--outlined {
    .mdc-floating-label {
      @include rtl-mixins.reflexive-position(left, notched-outline-variables.$padding);

      top: 17px;
    }

    &.mdc-select--with-leading-icon {
      .mdc-floating-label {
        @include rtl-mixins.reflexive-position(left, variables.$icon-padding - notched-outline-variables.$leading-width);

        &--float-above {
          @include rtl-mixins.reflexive-position(left, variables.$icon-padding - notched-outline-variables.$leading-width);
        }
      }
    }
  }
}

@mixin with-leading-icon_ {
  @include mixins.icon-horizontal-position_(16px, variables.$icon-padding);

  &.mdc-select--outlined {
    @include notched-outline-mixins.floating-label-float-position(
      variables.$outlined-label-position-y,
      variables.$outlined-with-leading-icon-label-position-x
    );
    @include floating-label-mixins.shake-animation(select-outlined-leading-icon);

    @include rtl-mixins.rtl {
      @include floating-label-mixins.shake-animation(select-outlined-leading-icon-rtl);
    }
  }

  &.mdc-select__menu .mdc-list-item__text {
    @include rtl-mixins.reflexive-property(padding, 32px /* left-value */, 32px /* right-value */);
  }
}

@mixin text_ {
  .mdc-select__selected-text {
    @include rtl-mixins.reflexive-property(padding, variables.$label-padding, variables.$arrow-padding);
    @include typography-mixins.typography(subtitle1);

    &::-ms-expand {
      display: none;
    }

    &::-ms-value {
      background-color: transparent;
      color: inherit;
    }

    // counteracts the extra text padding that Firefox adds by default
    // stylelint-disable-next-line function-url-quotes
    @-moz-document url-prefix("") {
      text-indent: -2px;
    }

    box-sizing: border-box;
    width: 100%;
    min-width: 200px;
    height: variables.$height;
    padding-top: 20px;
    padding-bottom: 4px;
    border: none;
    outline: none;
    background-color: transparent;
    color: inherit; // Override default user agent stylesheet
    white-space: nowrap;
    cursor: pointer;
    appearance: none;
  }
}

@mixin disabled_ {
  @include container-fill-color_(variables.$disabled-fill-color);

  .mdc-floating-label {
    @include floating-label-mixins.ink-color(variables.$disabled-label-color);
  }

  .mdc-select__dropdown-icon {
    @include dd-arrow-svg-bg_(variables.$dropdown-color, variables.$disabled-dropdown-opacity);
  }

  .mdc-line-ripple {
    @include line-ripple-mixins.inactive-color(variables.$disabled-ink-color);

    &::before {
      // TODO(b/146080006)
      border-bottom-style: dotted;
    }
  }

  .mdc-select__icon {
    @include theme-mixins.prop(color, variables.$disabled-icon-color);
  }

  .mdc-select__selected-text {
    @include theme-mixins.prop(color, variables.$disabled-ink-color);

    pointer-events: none;
  }

  &.mdc-select--outlined {
    @include container-fill-color_(transparent);
    @include outline-color_(variables.$outlined-disabled-border);
  }

  cursor: default;
  pointer-events: none;
}

@mixin no-label_ {
  &:not(.mdc-select--outlined) {
    .mdc-select__anchor .mdc-select__selected-text {
      padding-top: 14px;
    }
  }
}

@mixin outlined_ {
  @include container-fill-color(transparent);
  @include outline-color(variables.$outlined-idle-border);
  @include hover-outline-color(variables.$outlined-hover-border);
  @include focused-outline-color(primary);
  @include outline-shape-radius(small);
  @include container-fill-color(transparent);

  border: none;

  .mdc-select__anchor {
    @include ripple-mixins.states-base-color(transparent);
    @include floating-label-mixins.shake-animation(text-field-outlined);
    @include notched-outline-mixins.floating-label-float-position(variables.$outlined-label-position-y, 0);

    overflow: visible;
  }

  .mdc-select__selected-text {
    @include rtl-mixins.reflexive-property(padding, variables.$label-padding, variables.$arrow-padding);

    display: flex;
    padding-top: 14px;
    padding-bottom: 12px;
    border: none;
    background-color: transparent;
    z-index: 1;
  }

  .mdc-select__icon {
    z-index: 2;
  }

  .mdc-floating-label {
    line-height: 1.15rem;
    pointer-events: auto;
  }
}

@mixin helper-text_ {
  .mdc-select-helper-text {
    // stylelint-disable plugin/selector-bem-pattern
    .mdc-select__anchor + & {
      margin-right: 12px;
      margin-left: 12px;
    }

    .mdc-select--outlined .mdc-select__anchor + & {
      margin-right: 16px;
      margin-left: 16px;
    }
    // stylelint-enable plugin/selector-bem-pattern
  }

  .mdc-select--focused .mdc-select__anchor + .mdc-select-helper-text:not(.mdc-select-helper-text--validation-msg) {
    opacity: 1;
  }
}
