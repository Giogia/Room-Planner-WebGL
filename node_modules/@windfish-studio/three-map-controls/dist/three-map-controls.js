!function(t){var e={};function s(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},s.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="/",s(s.s=1)}([function(t,e,s){t.exports=s(3)(0)},function(t,e,s){"use strict";s.r(e);var i=s(0);if("undefined"==typeof window){s(2)}e.default=class extends i.EventDispatcher{constructor(t,e,s){super(),this.camera=t,this.domElement=void 0!==e?e:window.document.body,this.enabled=!0,this.target,this.minDistance=1,this.maxDistance=100,this.enableZoom=!0,this.zoomSpeed=6,this.zoomDampingAlpha=.1,this.initialZoom=0,this.enablePan=!0,this.keyPanSpeed=50,this.keyZoomSpeed=this.zoomSpeed,this.panDampingAlpha=.1,this.enableKeys=!0,this.keys={PAN_LEFT:"ArrowLeft",PAN_UP:"ArrowUp",PAN_RIGHT:"ArrowRight",PAN_BOTTOM:"ArrowDown",ZOOM_IN:"]",ZOOM_OUT:"["},this.mouseButtons={ZOOM:i.MOUSE.MIDDLE,PAN:i.MOUSE.LEFT},Object.assign(this,s);let o=!1;if(void 0===this.mode)throw new Error("'mode' option must be set to either 'plane' or 'sphere'");switch(this.mode){case"plane":o=void 0!==this.target.normal&&void 0!==this.target.constant;break;case"sphere":o=void 0!==this.target.center&&void 0!==this.target.radius}if(!o)throw new Error("'target' option must be an instance of type THREE.Plane or THREE.Sphere");this._eventListeners={contextmenu:this._onContextMenu.bind(this),mousedown:this._onMouseDown.bind(this),mousewheel:this._onMouseWheel.bind(this),MozMousePixelScroll:this._onMouseWheel.bind(this),touchstart:this._onTouchStart.bind(this),touchend:this._onTouchEnd.bind(this),touchmove:this._onTouchMove.bind(this),keydown:this._onKeyDown.bind(this),mouseover:this._onMouseOver.bind(this),mouseout:this._onMouseOut.bind(this),mousemove:this._onMouseMove.bind(this),mouseup:this._onMouseUp.bind(this)},this._init()}_init(){if(this.target0=this.target.clone(),this.position0=this.camera.position.clone(),this.zoom0=this.camera.zoom,this._changeEvent={type:"change"},this._startEvent={type:"start"},this._endEvent={type:"end"},this._STATES={NONE:-1,DOLLY:1,PAN:2,TOUCH_DOLLY:4,TOUCH_PAN:5},0==this.target.distanceToPoint(this.camera.position))throw new Error("ORIENTATION_UNKNOWABLE: initial Camera position cannot intersect target plane.");this._state=this._STATES.NONE,this._mouse=new i.Vector2,this._finalTargetDistance=0,this._currentTargetDistance=0,this._panTarget=new i.Vector3(0,0,0),this._panCurrent=new i.Vector3(0,0,0),this._minZoomPosition=new i.Vector3,this._maxZoomPosition=new i.Vector3,this._panStart=new i.Vector2,this._panEnd=new i.Vector2,this._panDelta=new i.Vector2,this._dollyStart=new i.Vector2,this._dollyEnd=new i.Vector2,this._dollyDelta=new i.Vector2,this._camOrientation=new i.Vector2,this._zoomAlpha,this._screenWorldXform=Math.tan(this.camera.fov/2*Math.PI/180),this._straightDollyTrack(),this.camera.position.lerpVectors(this._minZoomPosition,this._maxZoomPosition,this.initialZoom),this._finalTargetDistance=this._currentTargetDistance=Math.abs(this.target.distanceToPoint(this.camera.position));const t=this._intersectCameraTarget();this.camera.lookAt(t.intersection),this._camOrientation=t.ray.direction.clone().normalize(),this._updateZoomAlpha(),["contextmenu","mousedown","mousewheel","MozMousePixelScroll","touchstart","touchend","touchmove","mouseover","mouseout","keydown"].forEach(t=>{this.domElement.addEventListener(t,this._eventListeners[t],!1)}),"CANVAS"!=this.domElement.tagName||this.domElement.getAttribute("tabindex")||this.domElement.setAttribute("tabindex","1"),this.update()}_intersectCameraTarget(){let t,e=new i.Vector3;switch(this.mode){case"plane":const s=new i.Vector3;this.target.projectPoint(this.camera.position,s),(t=new i.Ray(this.camera.position,(new i.Vector3).subVectors(s,this.camera.position).normalize())).intersectPlane(this.target,e);break;case"sphere":(t=new i.Ray(this.camera.position,(new i.Vector3).subVectors(this.target.center,this.camera.position).normalize())).intersectSphere(this.target,e)}return{intersection:e,ray:t}}_straightDollyTrack(){this._updateDollyTrack(this._intersectCameraTarget().ray)}getZoomAlpha(){return this._zoomAlpha}reset(){this.target.copy(this.target0),this.camera.position.copy(this.position0),this.camera.zoom=this.zoom0,this.camera.updateProjectionMatrix(),this._init(),this.dispatchEvent(this._changeEvent),this.update(),this._state=this._STATES.NONE}update(){const t=new i.Vector3,e=new i.Vector3,s=this.camera.position;switch(e.copy(this._panCurrent),this._panCurrent.lerp(this._panTarget,this.panDampingAlpha),t.subVectors(this._panCurrent,e),this.mode){case"plane":this._maxZoomPosition.add(t),this._minZoomPosition.add(t);break;case"sphere":const s=new i.Vector3,o=new i.Quaternion;o.setFromAxisAngle(s.setFromMatrixColumn(this.camera.matrix,1),t.x),this._maxZoomPosition.applyQuaternion(o),this._minZoomPosition.applyQuaternion(o),o.setFromAxisAngle(s.setFromMatrixColumn(this.camera.matrix,0),t.y),this._maxZoomPosition.applyQuaternion(o),this._minZoomPosition.applyQuaternion(o),o.setFromAxisAngle(new i.Vector3(0,1,0),t.z),this._maxZoomPosition.applyQuaternion(o),this._minZoomPosition.applyQuaternion(o)}s.lerpVectors(this._minZoomPosition,this._maxZoomPosition,this._updateZoomAlpha()),"sphere"==this.mode&&this.camera.lookAt(this.target.center)}dispose(){Object.keys(this._eventListeners).forEach(t=>{this.domElement.removeEventListener(t,this._eventListeners[t],!1)})}zoomToFit(t,e,s){if(void 0===e&&(e=t.geometry.boundingSphere.center.clone()),e=t.localToWorld(e.clone()),void 0===s){const e=2*t.geometry.boundingSphere.radius;s=new i.Vector2(e,e)}switch(this.mode){case"plane":this._panTarget.copy(e),this._panCurrent.copy(this._intersectCameraTarget().intersection);break;case"sphere":const t=this._sphericalCoordinatesFrom(e),s=this._sphericalCoordinatesFrom(this.camera.position),o=(new i.Vector2).subVectors(t,s);Math.abs(o.x)>Math.PI&&(o.x=-Math.abs(o.x)/o.x*(2*Math.PI-Math.abs(o.x))),this._panTarget.add(new i.Vector3(0,-o.y,o.x))}this._straightDollyTrack();const o=this.camera.fov*(Math.PI/180),a=2*Math.atan(Math.tan(o/2)*this.camera.aspect),n=s.x/s.y;this._finalTargetDistance=(n>this.camera.aspect?s.x:s.y)/2/Math.tan((n>this.camera.aspect?a:o)/2)}targetAreaVisible(){let t,e,s,o;switch(this.mode){case"plane":var a=new i.Ray(this.camera.position,this._camOrientation).distanceToPlane(this.target);o=this.camera.position.clone(),s=(e=this._screenWorldXform*a)*this.camera.aspect,t=new i.Box2(new i.Vector2(o.x-s,o.y-e),new i.Vector2(o.x+s,o.y+e));break;case"sphere":const n=(new i.Vector3).subVectors(this.target.center,this.camera.position);o=this._sphericalCoordinatesFrom(this.camera.position);const h=Math.PI/2,r=n.length();e=this._screenWorldXform*(r/this.target.radius-1),e=Math.min(e,h);const c=this.target.radius*Math.cos(o.y-h);s=e*this.camera.aspect*(this.target.radius/c),s=Math.min(s,h),t=new i.Box2(new i.Vector2(o.x-s-h,o.y-e-h),new i.Vector2(o.x+s-h,o.y+e-h)),["min","max"].forEach(e=>{t[e].x=t[e].x>Math.PI?-2*Math.PI+t[e].x:t[e].x})}return t}_sphericalCoordinatesFrom(t){const e=(new i.Vector3).subVectors(this.target.center,t),s=new i.Vector3(e.x,0,e.z),o=(new i.Vector3,new i.Vector2(s.angleTo(new i.Vector3(1,0,0)),e.angleTo(new i.Vector3(0,1,0))));return o.x=e.z>0?2*Math.PI-o.x:o.x,o}_updateZoomAlpha(){this._finalTargetDistance=Math.max(this.minDistance,Math.min(this.maxDistance,this._finalTargetDistance));var t=this._currentTargetDistance-this._finalTargetDistance,e=this.zoomDampingAlpha;return this._currentTargetDistance-=t*e,this._zoomAlpha=Math.abs(Math.round(1e5*(1-(this._currentTargetDistance-this.minDistance)/(this.maxDistance-this.minDistance)))/1e5),this._zoomAlpha}_updateDollyTrack(t){let e=new i.Vector3;switch(this.mode){case"plane":t.intersectPlane(this.target,e);break;case"sphere":t.intersectSphere(this.target,e)}e&&(this._maxZoomPosition.addVectors(e,(new i.Vector3).subVectors(this.camera.position,e).normalize().multiplyScalar(this.minDistance)),this._minZoomPosition.copy(this._calculateMinZoom(this.camera.position,e)),this._finalTargetDistance=this._currentTargetDistance=e.clone().sub(this.camera.position).length())}_getZoomScale(t){return t=t||this.zoomSpeed,Math.pow(.95,t)}_panLeft(t,e){var s=new i.Vector3;switch(this.mode){case"sphere":s.set(-t,0,0);break;case"plane":s.setFromMatrixColumn(e,0),s.multiplyScalar(-t)}this._panTarget.add(s)}_panUp(t,e){var s=new i.Vector3;switch(this.mode){case"sphere":s.set(0,-t,0);break;case"plane":s.setFromMatrixColumn(e,1),s.multiplyScalar(t)}this._panTarget.add(s)}_pan(t,e){var s,o=this.domElement,a=new i.Ray(this.camera.position,this._camOrientation);switch(this.mode){case"plane":s=this._screenWorldXform*a.distanceToPlane(this.target);break;case"sphere":const t=(new i.Vector3).subVectors(this.camera.position,this.target.center);s=this._screenWorldXform*(t.length()/this.target.radius-1)}this._panLeft(2*t*s/o.clientHeight,this.camera.matrix),this._panUp(2*e*s/o.clientHeight,this.camera.matrix)}_dollyIn(t){this._cameraOfKnownType()?this._finalTargetDistance/=t:(console.warn("WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyOut(t){this._cameraOfKnownType()?this._finalTargetDistance*=t:(console.warn("WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_cameraOfKnownType(){return"PerspectiveCamera"===this.camera.type}_handleUpdateDollyTrackMouse(t){var e=this._mouse.clone();if(this._mouse.set(t.offsetX/this.domElement.clientWidth*2-1,-t.offsetY/this.domElement.clientHeight*2+1),!e.equals(this._mouse)){var s=new i.Raycaster;s.setFromCamera(this._mouse,this.camera),this._updateDollyTrack(s.ray)}}_handleMouseDownDolly(t){this._handleUpdateDollyTrackMouse(t),this._dollyStart.set(t.offsetX,t.offsetY)}_handleMouseDownPan(t){this._panStart.set(t.offsetX,t.offsetY)}_handleMouseMoveDolly(t){this._handleUpdateDollyTrackMouse(t),this._dollyEnd.set(t.offsetX,t.offsetY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyIn(this._getZoomScale()):this._dollyDelta.y<0&&this._dollyOut(this._getZoomScale()),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.offsetX,t.offsetY),this._panDelta.subVectors(this._panEnd,this._panStart),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseUp(t){}_calculateMinZoom(t,e){return e.clone().add(t.clone().sub(e).normalize().multiplyScalar(this.maxDistance))}_handleMouseWheel(t){this._handleUpdateDollyTrackMouse(t);var e=0;void 0!==t.wheelDelta?e=t.wheelDelta:void 0!==t.detail&&(e=-t.detail),e>0?this._dollyOut(this._getZoomScale()):e<0&&this._dollyIn(this._getZoomScale()),this.update()}_handleKeyDown(t){switch(t.key){case this.keys.PAN_UP:this._pan(0,this.keyPanSpeed),this.update();break;case this.keys.PAN_BOTTOM:this._pan(0,-this.keyPanSpeed),this.update();break;case this.keys.PAN_LEFT:this._pan(this.keyPanSpeed,0),this.update();break;case this.keys.PAN_RIGHT:this._pan(-this.keyPanSpeed,0),this.update();break;case this.keys.ZOOM_IN:this._dollyIn(this._getZoomScale(this.keyZoomSpeed)),this.update();break;case this.keys.ZOOM_OUT:this._dollyOut(this._getZoomScale(this.keyZoomSpeed)),this.update()}}_handleUpdateDollyTrackTouch(t){var e=new i.Vector2,s=t.touches[0].pageX-t.touches[1].pageX,o=t.touches[0].pageY-t.touches[1].pageY;e.x=t.touches[0].pageX+s/2,e.y=t.touches[0].pageY+o/2;var a=new i.Vector2;a.x=e.x/domElement.clientWidth*2-1,a.y=-e.y/domElement.clientHeight*2+1,this._updateDollyTrack(a)}_handleTouchStartDolly(t){this._handleUpdateDollyTrackTouch(t);var e=t.touches[0].pageX-t.touches[1].pageX,s=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+s*s);this._dollyStart.set(0,i)}_handleTouchStartPan(t){this._panStart.set(t.touches[0].pageX,t.touches[0].pageY)}_handleTouchMoveDolly(t){this._handleUpdateDollyTrackTouch(t);var e=t.touches[0].pageX-t.touches[1].pageX,s=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+s*s);this._dollyEnd.set(0,i),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale()):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale()),this._dollyStart.copy(this._dollyEnd),this.update()}_handleTouchMovePan(t){this._panEnd.set(t.touches[0].pageX,t.touches[0].pageY),this._panDelta.subVectors(this._panEnd,this._panStart),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleTouchEnd(t){}_onMouseDown(t){if(!1!==this.enabled){if(t.preventDefault(),t.button===this.mouseButtons.ZOOM){if(!1===this.enableZoom)return;this._handleMouseDownDolly(t),this._state=this._STATES.DOLLY}else if(t.button===this.mouseButtons.PAN){if(!1===this.enablePan)return;this._handleMouseDownPan(t),this._state=this._STATES.PAN}this._state!==this._STATES.NONE&&(this.domElement.addEventListener("mousemove",this._eventListeners.mousemove,!1),this.domElement.addEventListener("mouseup",this._eventListeners.mouseup,!1),this.dispatchEvent(this._startEvent))}}_onMouseMove(t){if(!1!==this.enabled)if(t.preventDefault(),this._state===this._STATES.DOLLY){if(!1===this.enableZoom)return;this._handleMouseMoveDolly(t)}else if(this._state===this._STATES.PAN){if(!1===this.enablePan)return;this._handleMouseMovePan(t)}}_onMouseUp(t){!1!==this.enabled&&(this._handleMouseUp(t),this.domElement.removeEventListener("mousemove",this._eventListeners.mousemove,!1),this.domElement.removeEventListener("mouseup",this._eventListeners.mouseup,!1),this.dispatchEvent(this._endEvent),this._state=this._STATES.NONE)}_onMouseWheel(t){!1!==this.enabled&&!1!==this.enableZoom&&this._state===this._STATES.NONE&&(t.preventDefault(),t.stopPropagation(),this._handleMouseWheel(t),this.dispatchEvent(this._startEvent),this.dispatchEvent(this._endEvent))}_onKeyDown(t){!1!==this.enabled&&!1!==this.enableKeys&&!1!==this.enablePan&&this._handleKeyDown(t)}_onTouchStart(t){if(!1!==this.enabled){switch(t.touches.length){case 1:if(!1===this.enablePan)return;this._handleTouchStartPan(t),this._state=this._STATES.TOUCH_PAN;break;case 2:if(!1===this.enableZoom)return;this._handleTouchStartDolly(t),this._state=this._STATES.TOUCH_DOLLY;break;default:this._state=this._STATES.NONE}this._state!==this._STATES.NONE&&this.dispatchEvent(this._startEvent)}}_onTouchMove(t){if(!1!==this.enabled)switch(t.preventDefault(),t.stopPropagation(),t.touches.length){case 1:if(!1===this.enablePan)return;if(this._state!==this._STATES.TOUCH_PAN)return;this._handleTouchMovePan(t);break;case 2:if(!1===this.enableZoom)return;if(this._state!==this._STATES.TOUCH_DOLLY)return;this._handleTouchMoveDolly(t);break;default:this._state=this._STATES.NONE}}_onTouchEnd(t){!1!==this.enabled&&(this._handleTouchEnd(t),this.dispatchEvent(this._endEvent),this._state=this._STATES.NONE)}_onContextMenu(t){t.preventDefault()}_onMouseOver(t){return this.domElement.focus(),!1}_onMouseOut(t){return this.domElement.blur(),!1}}},function(t,e){t.exports={console:{log:function(){}},document:{body:{clientWidth:1920,clientHeight:1080,addEventListener:function(){},removeEventListener:function(){}}}}},function(t,e){t.exports=vendor}]);
//# sourceMappingURL=three-map-controls.js.map