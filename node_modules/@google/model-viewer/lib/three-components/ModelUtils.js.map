{"version":3,"file":"ModelUtils.js","sourceRoot":"","sources":["../../src/three-components/ModelUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Camera, Material, Object3D, Scene, Shader, Vector3} from 'three';\nimport {SkeletonUtils} from 'three/examples/jsm/utils/SkeletonUtils.js';\n\nimport {cubeUVChunk} from './shader-chunk/cube_uv_reflection_fragment.glsl.js';\nimport {normalmapChunk} from './shader-chunk/normalmap_pars_fragment.glsl.js';\n\n// NOTE(cdata): What follows is a TypeScript-ified version of:\n// https://gist.github.com/cdata/f2d7a6ccdec071839bc1954c32595e87\n\nexport interface Gltf {\n  animations: Array<any>;\n  scene: Scene|null;\n  scenes: Array<Scene>;\n  cameras: Array<Camera>;\n  asset: any;\n  parser: any;\n  userData: any;\n}\n\n/**\n * This is a patch to Three.js' handling of PMREM environments. This patch\n * has to be applied after cloning because Three.js does not seem to clone\n * the onBeforeCompile method.\n */\nconst updateShader = (shader: Shader) => {\n  shader.fragmentShader =\n      shader.fragmentShader\n          .replace('#include <cube_uv_reflection_fragment>', cubeUVChunk)\n          .replace('#include <normalmap_pars_fragment>', normalmapChunk);\n};\n\n\n\n/**\n * Fully clones a parsed GLTF, including correct cloning of any SkinnedMesh\n * objects.\n *\n * NOTE(cdata): This is necessary due to limitations of the Three.js clone\n * routine on scenes. Without it, models with skeletal animations will not be\n * cloned properly.\n *\n * @see https://github.com/mrdoob/three.js/issues/5878\n */\nexport const cloneGltf = (gltf: Gltf): Gltf => {\n  const hasScene = gltf.scene != null;\n  const clone: Gltf = {\n    ...gltf,\n    scene: hasScene ? SkeletonUtils.clone(gltf.scene!) as Scene : null\n  };\n\n  if (hasScene) {\n    const specularGlossiness =\n        gltf.parser.extensions['KHR_materials_pbrSpecularGlossiness'];\n    /**\n     * Creates a clone of the given material, and applies a patch to the\n     * shader program.\n     */\n    const cloneAndPatchMaterial = (material: Material): Material => {\n      const clone = (material as any).isGLTFSpecularGlossinessMaterial ?\n          specularGlossiness.cloneMaterial(material) :\n          material.clone();\n      clone.onBeforeCompile = updateShader;\n      // TODO(elalish): remove this when we upgrade three.js to a version with\n      // this fix: mrdoob/three.js#17795\n      clone.vertexTangents = material.vertexTangents;\n      return clone;\n    };\n\n    clone.scene!.traverse((node: any) => {\n      // Set a high renderOrder while we're here to ensure the model\n      // always renders on top of the skysphere\n      node.renderOrder = 1000;\n\n      if (specularGlossiness != null && node.isMesh) {\n        node.onBeforeRender = specularGlossiness.refreshUniforms;\n      }\n\n      // Materials aren't cloned when cloning meshes; geometry\n      // and materials are copied by reference. This is necessary\n      // for the same model to be used twice with different\n      // environment maps.\n      if (Array.isArray(node.material)) {\n        node.material = node.material.map(cloneAndPatchMaterial);\n      } else if (node.material != null) {\n        node.material = cloneAndPatchMaterial(node.material);\n      }\n    });\n  }\n\n  return clone;\n};\n\n/**\n * Moves Three.js objects from one parent to another\n */\nexport const moveChildren = (from: Object3D, to: Object3D) => {\n  while (from.children.length) {\n    to.add(from.children.shift()!);\n  }\n};\n\n/**\n * Performs a reduction across all the vertices of the input model and all its\n * children. The supplied function takes the reduced value and a vertex and\n * returns the newly reduced value. The value is initialized as zero.\n *\n * Adapted from Three.js, @see https://github.com/mrdoob/three.js/blob/7e0a78beb9317e580d7fa4da9b5b12be051c6feb/src/math/Box3.js#L241\n */\nexport const reduceVertices =\n    (model: Object3D, func: (value: number, vertex: Vector3) => number):\n        number => {\n          let value = 0;\n          const vector = new Vector3();\n          model.traverse((object: any) => {\n            let i, l;\n\n            object.updateWorldMatrix(false, false);\n\n            let geometry = object.geometry;\n\n            if (geometry !== undefined) {\n              if (geometry.isGeometry) {\n                let vertices = geometry.vertices;\n\n                for (i = 0, l = vertices.length; i < l; i++) {\n                  vector.copy(vertices[i]);\n                  vector.applyMatrix4(object.matrixWorld);\n\n                  value = func(value, vector);\n                }\n\n              } else if (geometry.isBufferGeometry) {\n                let attribute = geometry.attributes.position;\n\n                if (attribute !== undefined) {\n                  for (i = 0, l = attribute.count; i < l; i++) {\n                    vector.fromBufferAttribute(attribute, i)\n                        .applyMatrix4(object.matrixWorld);\n\n                    value = func(value, vector);\n                  }\n                }\n              }\n            }\n          });\n          return value;\n        };"]}