{"version":3,"file":"ModelUtils.js","sourceRoot":"","sources":["../../src/three-components/ModelUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {FrontSide, Material, Object3D, Scene, Shader, Vector3} from 'three';\nimport {GLTF} from 'three/examples/jsm/loaders/GLTFLoader';\nimport {SkeletonUtils} from 'three/examples/jsm/utils/SkeletonUtils.js';\n\nimport {alphaChunk} from './shader-chunk/alphatest_fragment.glsl.js';\n\n/**\n * Fully clones a parsed GLTF, including correct cloning of any SkinnedMesh\n * objects.\n */\nexport const cloneGltf = (gltf: GLTF): GLTF => {\n  const clone:\n      GLTF = {...gltf, scene: SkeletonUtils.clone(gltf.scene!) as Scene};\n\n  /**\n   * Creates a clone of the given material, and applies a patch to the\n   * shader program.\n   */\n  const cloneAndPatchMaterial = (material: Material): Material => {\n    const clone = material.clone();\n    // This allows us to patch three's materials, on top of patches already\n    // made, for instance GLTFLoader patches SpecularGlossiness materials.\n    // Unfortunately, three's program cache differentiates SpecGloss materials\n    // via onBeforeCompile.toString(), so these two functions do the same thing\n    // but look different in order to force a proper recompile.\n    const oldOnBeforeCompile = material.onBeforeCompile;\n    clone.onBeforeCompile = (material as any).isGLTFSpecularGlossinessMaterial ?\n        (shader: Shader) => {\n          oldOnBeforeCompile(shader, undefined as any);\n          shader.fragmentShader = shader.fragmentShader.replace(\n              '#include <alphatest_fragment>', alphaChunk);\n        } :\n        (shader: Shader) => {\n          shader.fragmentShader = shader.fragmentShader.replace(\n              '#include <alphatest_fragment>', alphaChunk);\n          oldOnBeforeCompile(shader, undefined as any);\n        };\n    // This makes shadows better for non-manifold meshes\n    clone.shadowSide = FrontSide;\n    // This improves transparent rendering and can be removed whenever\n    // https://github.com/mrdoob/three.js/pull/18235 finally lands.\n    if (clone.transparent) {\n      clone.depthWrite = false;\n    }\n    // This little hack ignores alpha for opaque materials, in order to comply\n    // with the glTF spec.\n    if (!clone.alphaTest && !clone.transparent) {\n      clone.alphaTest = -0.5;\n    }\n    return clone;\n  };\n\n  clone.scene!.traverse((node: any) => {\n    // Set a high renderOrder while we're here to ensure the model\n    // always renders on top of the skysphere\n    node.renderOrder = 1000;\n\n    // Materials aren't cloned when cloning meshes; geometry\n    // and materials are copied by reference. This is necessary\n    // for the same model to be used twice with different\n    // environment maps.\n    if (Array.isArray(node.material)) {\n      node.material = node.material.map(cloneAndPatchMaterial);\n    } else if (node.material != null) {\n      node.material = cloneAndPatchMaterial(node.material);\n    }\n  });\n\n  return clone;\n};\n\n/**\n * Moves Three.js objects from one parent to another\n */\nexport const moveChildren = (from: Object3D, to: Object3D) => {\n  while (from.children.length) {\n    to.add(from.children.shift()!);\n  }\n};\n\n/**\n * Performs a reduction across all the vertices of the input model and all its\n * children. The supplied function takes the reduced value and a vertex and\n * returns the newly reduced value. The value is initialized as zero.\n *\n * Adapted from Three.js, @see https://github.com/mrdoob/three.js/blob/7e0a78beb9317e580d7fa4da9b5b12be051c6feb/src/math/Box3.js#L241\n */\nexport const reduceVertices =\n    (model: Object3D, func: (value: number, vertex: Vector3) => number):\n        number => {\n          let value = 0;\n          const vector = new Vector3();\n          model.traverse((object: any) => {\n            let i, l;\n\n            object.updateWorldMatrix(false, false);\n\n            let geometry = object.geometry;\n\n            if (geometry !== undefined) {\n              if (geometry.isGeometry) {\n                let vertices = geometry.vertices;\n\n                for (i = 0, l = vertices.length; i < l; i++) {\n                  vector.copy(vertices[i]);\n                  vector.applyMatrix4(object.matrixWorld);\n\n                  value = func(value, vector);\n                }\n\n              } else if (geometry.isBufferGeometry) {\n                let attribute = geometry.attributes.position;\n\n                if (attribute !== undefined) {\n                  for (i = 0, l = attribute.count; i < l; i++) {\n                    vector.fromBufferAttribute(attribute, i)\n                        .applyMatrix4(object.matrixWorld);\n\n                    value = func(value, vector);\n                  }\n                }\n              }\n            }\n          });\n          return value;\n        };"]}