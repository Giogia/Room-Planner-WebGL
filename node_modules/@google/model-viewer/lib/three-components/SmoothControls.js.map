{"version":3,"file":"SmoothControls.js","sourceRoot":"","sources":["../../src/three-components/SmoothControls.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Euler, Event as ThreeEvent, EventDispatcher, PerspectiveCamera, Spherical, Vector3} from 'three';\n\nimport {clamp} from '../utilities.js';\n\nexport type EventHandlingBehavior = 'prevent-all'|'prevent-handled';\nexport type InteractionPolicy = 'always-allow'|'allow-when-focused';\nexport type TouchMode = 'rotate'|'zoom';\n\ninterface Pointer {\n  clientX: number, clientY: number,\n}\n\nexport interface SmoothControlsOptions {\n  // The closest the camera can be to the target\n  minimumRadius?: number;\n  // The farthest the camera can be from the target\n  maximumRadius?: number;\n  // The minimum angle between model-up and the camera polar position\n  minimumPolarAngle?: number;\n  // The maximum angle between model-up and the camera polar position\n  maximumPolarAngle?: number;\n  // The minimum angle between model-forward and the camera azimuthal position\n  minimumAzimuthalAngle?: number;\n  // The maximum angle between model-forward and the camera azimuthal position\n  maximumAzimuthalAngle?: number;\n  // The minimum camera field of view in degrees\n  minimumFieldOfView?: number;\n  // The maximum camera field of view in degrees\n  maximumFieldOfView?: number;\n  // Controls when events will be cancelled (always, or only when handled)\n  eventHandlingBehavior?: EventHandlingBehavior;\n  // Controls when interaction is allowed (always, or only when focused)\n  interactionPolicy?: InteractionPolicy;\n}\n\nexport const DEFAULT_OPTIONS = Object.freeze<SmoothControlsOptions>({\n  minimumRadius: 0,\n  maximumRadius: 2,\n  minimumPolarAngle: Math.PI / 8,\n  maximumPolarAngle: Math.PI - Math.PI / 8,\n  minimumAzimuthalAngle: -Infinity,\n  maximumAzimuthalAngle: Infinity,\n  minimumFieldOfView: 10,\n  maximumFieldOfView: 45,\n  eventHandlingBehavior: 'prevent-all',\n  interactionPolicy: 'always-allow'\n});\n\nconst $velocity = Symbol('v');\n\n// Internal orbital position state\nconst $spherical = Symbol('spherical');\nconst $goalSpherical = Symbol('goalSpherical');\nconst $thetaDamper = Symbol('thetaDamper');\nconst $phiDamper = Symbol('phiDamper');\nconst $radiusDamper = Symbol('radiusDamper');\nconst $logFov = Symbol('fov');\nconst $goalLogFov = Symbol('goalLogFov');\nconst $fovDamper = Symbol('fovDamper');\nconst $target = Symbol('target');\nconst $goalTarget = Symbol('goalTarget');\nconst $targetDamperX = Symbol('targetDamperX');\nconst $targetDamperY = Symbol('targetDamperY');\nconst $targetDamperZ = Symbol('targetDamperZ');\n\nconst $options = Symbol('options');\nconst $touchMode = Symbol('touchMode');\nconst $canInteract = Symbol('canInteract');\nconst $interactionEnabled = Symbol('interactionEnabled');\nconst $userAdjustOrbit = Symbol('userAdjustOrbit');\nconst $isUserChange = Symbol('isUserChange');\nconst $isStationary = Symbol('isMoving');\nconst $moveCamera = Symbol('moveCamera');\n\n// Pointer state\nconst $pointerIsDown = Symbol('pointerIsDown');\nconst $lastPointerPosition = Symbol('lastPointerPosition');\nconst $lastTouches = Symbol('lastTouches');\n\n// Value conversion methods\nconst $pixelLengthToSphericalAngle = Symbol('pixelLengthToSphericalAngle');\nconst $twoTouchDistance = Symbol('twoTouchDistance');\nconst $wrapAngle = Symbol('wrapAngle');\n\n// Event handlers\nconst $onMouseMove = Symbol('onMouseMove');\nconst $onMouseDown = Symbol('onMouseDown');\nconst $onMouseUp = Symbol('onMouseUp');\nconst $onTouchStart = Symbol('onTouchStart');\nconst $onTouchEnd = Symbol('onTouchEnd');\nconst $onTouchMove = Symbol('onTouchMove');\nconst $onWheel = Symbol('onWheel');\nconst $onKeyDown = Symbol('onKeyDown');\nconst $handlePointerMove = Symbol('handlePointerMove');\nconst $handleSinglePointerMove = Symbol('handleSinglePointerMove');\nconst $handlePointerDown = Symbol('handlePointerDown');\nconst $handleSinglePointerDown = Symbol('handleSinglePointerDown');\nconst $handlePointerUp = Symbol('handlePointerUp');\nconst $handleWheel = Symbol('handleWheel');\nconst $handleKey = Symbol('handleKey');\n\n// Constants\nconst TOUCH_EVENT_RE = /^touch(start|end|move)$/;\nconst KEYBOARD_ORBIT_INCREMENT = Math.PI / 8;\nconst ZOOM_SENSITIVITY = 0.1;\nconst DECAY_MILLISECONDS = 50;\nconst NATURAL_FREQUENCY = 1 / DECAY_MILLISECONDS;\nconst NIL_SPEED = 0.0002 * NATURAL_FREQUENCY;\n\nexport const KeyCode = {\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\nexport type ChangeSource = 'user-interaction'|'none';\n\nexport const ChangeSource: {[index: string]: ChangeSource} = {\n  USER_INTERACTION: 'user-interaction',\n  NONE: 'none'\n};\n\n/**\n * ChangEvents are dispatched whenever the camera position or orientation has\n * changed\n */\nexport interface ChangeEvent extends ThreeEvent {\n  /**\n   * determines what was the originating reason for the change event eg user or\n   * none\n   */\n  source: ChangeSource,\n}\n\n/**\n * The Damper class is a generic second-order critically damped system that does\n * one linear step of the desired length of time. The only parameter is\n * DECAY_MILLISECONDS, which should be adjustable: TODO(#580). This common\n * parameter makes all states converge at the same rate regardless of scale.\n * xNormalization is a number to provide the rough scale of x, such that\n * NIL_SPEED clamping also happens at roughly the same convergence for all\n * states.\n */\nexport class Damper {\n  private[$velocity]: number = 0;\n\n  update(\n      x: number, xGoal: number, timeStepMilliseconds: number,\n      xNormalization: number): number {\n    if (x == null) {\n      return xGoal;\n    }\n    if (x === xGoal && this[$velocity] === 0) {\n      return xGoal;\n    }\n    if (timeStepMilliseconds < 0) {\n      return x;\n    }\n    // Exact solution to a critically damped second-order system, where:\n    // acceleration = NATURAL_FREQUENCY * NATURAL_FREQUENCY * (xGoal - x) -\n    // 2 * NATURAL_FREQUENCY * this[$velocity];\n    const deltaX = (x - xGoal);\n    const intermediateVelocity = this[$velocity] + NATURAL_FREQUENCY * deltaX;\n    const intermediateX = deltaX + timeStepMilliseconds * intermediateVelocity;\n    const decay = Math.exp(-NATURAL_FREQUENCY * timeStepMilliseconds);\n    const newVelocity =\n        (intermediateVelocity - NATURAL_FREQUENCY * intermediateX) * decay;\n    const acceleration =\n        -NATURAL_FREQUENCY * (newVelocity + intermediateVelocity * decay);\n    if (Math.abs(newVelocity) < NIL_SPEED * xNormalization &&\n        acceleration * deltaX >= 0) {\n      // This ensures the controls settle and stop calling this function instead\n      // of asymptotically approaching their goal.\n      this[$velocity] = 0;\n      return xGoal;\n    } else {\n      this[$velocity] = newVelocity;\n      return xGoal + intermediateX * decay;\n    }\n  }\n}\n\n/**\n * SmoothControls is a Three.js helper for adding delightful pointer and\n * keyboard-based input to a staged Three.js scene. Its API is very similar to\n * OrbitControls, but it offers more opinionated (subjectively more delightful)\n * defaults, easy extensibility and subjectively better out-of-the-box keyboard\n * support.\n *\n * One important change compared to OrbitControls is that the `update` method\n * of SmoothControls must be invoked on every frame, otherwise the controls\n * will not have an effect.\n *\n * Another notable difference compared to OrbitControls is that SmoothControls\n * does not currently support panning (but probably will in a future revision).\n *\n * Like OrbitControls, SmoothControls assumes that the orientation of the camera\n * has been set in terms of position, rotation and scale, so it is important to\n * ensure that the camera's matrixWorld is in sync before using SmoothControls.\n */\nexport class SmoothControls extends EventDispatcher {\n  private[$interactionEnabled]: boolean = false;\n\n  private[$options]: SmoothControlsOptions;\n  private[$isUserChange] = false;\n\n  private[$spherical] = new Spherical();\n  private[$goalSpherical] = new Spherical();\n  private[$thetaDamper] = new Damper();\n  private[$phiDamper] = new Damper();\n  private[$radiusDamper] = new Damper();\n  private[$logFov]: number;\n  private[$goalLogFov]: number;\n  private[$fovDamper] = new Damper();\n  private[$target] = new Vector3();\n  private[$goalTarget] = new Vector3();\n  private[$targetDamperX] = new Damper();\n  private[$targetDamperY] = new Damper();\n  private[$targetDamperZ] = new Damper();\n\n  private[$pointerIsDown] = false;\n  private[$lastPointerPosition]: Pointer = {\n    clientX: 0,\n    clientY: 0,\n  };\n  private[$lastTouches]: TouchList;\n  private[$touchMode]: TouchMode;\n\n  private[$onMouseMove]: (event: Event) => void;\n  private[$onMouseDown]: (event: Event) => void;\n  private[$onMouseUp]: (event: Event) => void;\n  private[$onWheel]: (event: Event) => void;\n  private[$onKeyDown]: (event: Event) => void;\n\n  private[$onTouchStart]: (event: Event) => void;\n  private[$onTouchEnd]: (event: Event) => void;\n  private[$onTouchMove]: (event: Event) => void;\n\n  constructor(\n      readonly camera: PerspectiveCamera, readonly element: HTMLElement) {\n    super();\n\n    this[$onMouseMove] = (event: Event) =>\n        this[$handlePointerMove](event as MouseEvent);\n    this[$onMouseDown] = (event: Event) =>\n        this[$handlePointerDown](event as MouseEvent);\n    this[$onMouseUp] = (event: Event) =>\n        this[$handlePointerUp](event as MouseEvent);\n    this[$onWheel] = (event: Event) => this[$handleWheel](event as WheelEvent);\n    this[$onKeyDown] = (event: Event) =>\n        this[$handleKey](event as KeyboardEvent);\n    this[$onTouchStart] = (event: Event) =>\n        this[$handlePointerDown](event as TouchEvent);\n    this[$onTouchEnd] = (event: Event) =>\n        this[$handlePointerUp](event as TouchEvent);\n    this[$onTouchMove] = (event: Event) =>\n        this[$handlePointerMove](event as TouchEvent);\n\n    this[$options] = Object.assign({}, DEFAULT_OPTIONS);\n\n    this.setOrbit(0, Math.PI / 2, 1);\n    this.setFieldOfView(100);\n    this.jumpToGoal();\n  }\n\n  get interactionEnabled(): boolean {\n    return this[$interactionEnabled];\n  }\n\n  enableInteraction() {\n    if (this[$interactionEnabled] === false) {\n      const {element} = this;\n      element.addEventListener('mousemove', this[$onMouseMove]);\n      element.addEventListener('mousedown', this[$onMouseDown]);\n      element.addEventListener('wheel', this[$onWheel]);\n      element.addEventListener('keydown', this[$onKeyDown]);\n      element.addEventListener('touchstart', this[$onTouchStart]);\n      element.addEventListener('touchmove', this[$onTouchMove]);\n\n      self.addEventListener('mouseup', this[$onMouseUp]);\n      self.addEventListener('touchend', this[$onTouchEnd]);\n\n      this.element.style.cursor = 'grab';\n      this[$interactionEnabled] = true;\n    }\n  }\n\n  disableInteraction() {\n    if (this[$interactionEnabled] === true) {\n      const {element} = this;\n\n      element.removeEventListener('mousemove', this[$onMouseMove]);\n      element.removeEventListener('mousedown', this[$onMouseDown]);\n      element.removeEventListener('wheel', this[$onWheel]);\n      element.removeEventListener('keydown', this[$onKeyDown]);\n      element.removeEventListener('touchstart', this[$onTouchStart]);\n      element.removeEventListener('touchmove', this[$onTouchMove]);\n\n      self.removeEventListener('mouseup', this[$onMouseUp]);\n      self.removeEventListener('touchend', this[$onTouchEnd]);\n\n      element.style.cursor = '';\n      this[$interactionEnabled] = false;\n    }\n  }\n\n  /**\n   * The options that are currently configured for the controls instance.\n   */\n  get options() {\n    return this[$options];\n  }\n\n  /**\n   * Copy the spherical values that represent the current camera orbital\n   * position relative to the configured target into a provided Spherical\n   * instance. If no Spherical is provided, a new Spherical will be allocated\n   * to copy the values into. The Spherical that values are copied into is\n   * returned.\n   */\n  getCameraSpherical(target: Spherical = new Spherical()) {\n    return target.copy(this[$spherical]);\n  }\n\n  /**\n   * Returns the camera's current vertical field of view in degrees.\n   */\n  getFieldOfView(): number {\n    return this.camera.fov;\n  }\n\n  /**\n   * Configure the options of the controls. Configured options will be\n   * merged with whatever options have already been configured for this\n   * controls instance.\n   */\n  applyOptions(options: SmoothControlsOptions) {\n    Object.assign(this[$options], options);\n    // Re-evaluates clamping based on potentially new values for min/max\n    // polar, azimuth and radius:\n    this.setOrbit();\n    // Prevent interpolation in the case that any target spherical values\n    // changed (preserving OrbitalControls behavior):\n    if (this[$isStationary]()) {\n      return;\n    }\n    this[$spherical].copy(this[$goalSpherical]);\n    this[$moveCamera]();\n  }\n\n  /**\n   * Sets the non-interpolated camera parameters\n   */\n  updateIntrinsics(nearPlane: number, farPlane: number, aspect: number) {\n    this.camera.near = Math.max(nearPlane, farPlane / 1000);\n    this.camera.far = farPlane;\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Set the absolute orbital goal of the camera. The change will be\n   * applied over a number of frames depending on configured acceleration and\n   * dampening options.\n   *\n   * Returns true if invoking the method will result in the camera changing\n   * position and/or rotation, otherwise false.\n   */\n  setOrbit(\n      goalTheta: number = this[$goalSpherical].theta,\n      goalPhi: number = this[$goalSpherical].phi,\n      goalRadius: number = this[$goalSpherical].radius): boolean {\n    const {\n      minimumAzimuthalAngle,\n      maximumAzimuthalAngle,\n      minimumPolarAngle,\n      maximumPolarAngle,\n      minimumRadius,\n      maximumRadius\n    } = this[$options];\n\n    const {theta, phi, radius} = this[$goalSpherical];\n\n    const nextTheta =\n        clamp(goalTheta, minimumAzimuthalAngle!, maximumAzimuthalAngle!);\n    if (!isFinite(minimumAzimuthalAngle!) &&\n        !isFinite(maximumAzimuthalAngle!)) {\n      this[$spherical].theta =\n          this[$wrapAngle](this[$spherical].theta - nextTheta) + nextTheta;\n    }\n\n    const nextPhi = clamp(goalPhi, minimumPolarAngle!, maximumPolarAngle!);\n    const nextRadius = clamp(goalRadius, minimumRadius!, maximumRadius!);\n\n    if (nextTheta === theta && nextPhi === phi && nextRadius === radius) {\n      return false;\n    }\n\n    this[$goalSpherical].theta = nextTheta;\n    this[$goalSpherical].phi = nextPhi;\n    this[$goalSpherical].radius = nextRadius;\n    this[$goalSpherical].makeSafe();\n\n    this[$isUserChange] = false;\n\n    return true;\n  }\n\n  /**\n   * Subset of setOrbit() above, which only sets the camera's radius.\n   */\n  setRadius(radius: number) {\n    this[$goalSpherical].radius = radius;\n    this.setOrbit();\n  }\n\n  /**\n   * Sets the goal field of view for the camera\n   */\n  setFieldOfView(fov: number) {\n    const {minimumFieldOfView, maximumFieldOfView} = this[$options];\n    fov = clamp(fov, minimumFieldOfView!, maximumFieldOfView!);\n    this[$goalLogFov] = Math.log(fov);\n  }\n\n  /**\n   * Sets the target the camera is pointing toward\n   */\n  setTarget(x: number, y: number, z: number) {\n    this[$goalTarget].set(x, y, z);\n  }\n\n  /**\n   * Returns a copy of the target position the camera is pointed toward\n   */\n  getTarget(): Vector3 {\n    return this[$target].clone();\n  }\n\n  /**\n   * Adjust the orbital position of the camera relative to its current orbital\n   * position. Does not let the theta goal get more than pi ahead of the current\n   * theta, which ensures interpolation continues in the direction of the delta.\n   */\n  adjustOrbit(\n      deltaTheta: number, deltaPhi: number, deltaRadius: number,\n      deltaFov: number): boolean {\n    const {theta, phi, radius} = this[$goalSpherical];\n\n    const dTheta = this[$spherical].theta - theta;\n    const dThetaLimit = Math.PI - 0.001;\n    const goalTheta =\n        theta - clamp(deltaTheta, -dThetaLimit - dTheta, dThetaLimit - dTheta);\n    const goalPhi = phi - deltaPhi;\n    const goalRadius = radius + deltaRadius;\n    let handled = this.setOrbit(goalTheta, goalPhi, goalRadius);\n\n    if (deltaFov !== 0) {\n      const goalLogFov = this[$goalLogFov] + deltaFov;\n      this.setFieldOfView(Math.exp(goalLogFov));\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  /**\n   * Move the camera instantly instead of accelerating toward the goal\n   * parameters.\n   */\n  jumpToGoal() {\n    this.update(0, 100 * DECAY_MILLISECONDS);\n  }\n\n  /**\n   * Update controls. In most cases, this will result in the camera\n   * interpolating its position and rotation until it lines up with the\n   * designated goal orbital position.\n   *\n   * Time and delta are measured in milliseconds.\n   */\n  update(_time: number, delta: number) {\n    if (this[$isStationary]()) {\n      return;\n    }\n    const {maximumPolarAngle, maximumRadius, maximumFieldOfView} =\n        this[$options];\n\n    const dTheta = this[$spherical].theta - this[$goalSpherical].theta;\n    if (Math.abs(dTheta) > Math.PI &&\n        !isFinite(this[$options].minimumAzimuthalAngle!) &&\n        !isFinite(this[$options].maximumAzimuthalAngle!)) {\n      this[$spherical].theta -= Math.sign(dTheta) * 2 * Math.PI;\n    }\n\n    this[$spherical].theta = this[$thetaDamper].update(\n        this[$spherical].theta, this[$goalSpherical].theta, delta, Math.PI);\n\n    this[$spherical].phi = this[$phiDamper].update(\n        this[$spherical].phi,\n        this[$goalSpherical].phi,\n        delta,\n        maximumPolarAngle!);\n\n    this[$spherical].radius = this[$radiusDamper].update(\n        this[$spherical].radius,\n        this[$goalSpherical].radius,\n        delta,\n        maximumRadius!);\n\n    this[$logFov] = this[$fovDamper].update(\n        this[$logFov], this[$goalLogFov], delta, maximumFieldOfView!);\n\n    this[$target].x = this[$targetDamperX].update(\n        this[$target].x, this[$goalTarget].x, delta, maximumRadius!);\n    this[$target].y = this[$targetDamperY].update(\n        this[$target].y, this[$goalTarget].y, delta, maximumRadius!);\n    this[$target].z = this[$targetDamperZ].update(\n        this[$target].z, this[$goalTarget].z, delta, maximumRadius!);\n\n    this[$moveCamera]();\n  }\n\n  private[$isStationary](): boolean {\n    return this[$goalSpherical].theta === this[$spherical].theta &&\n        this[$goalSpherical].phi === this[$spherical].phi &&\n        this[$goalSpherical].radius === this[$spherical].radius &&\n        this[$goalLogFov] === this[$logFov] &&\n        this[$goalTarget].equals(this[$target]);\n  }\n\n  private[$moveCamera]() {\n    // Derive the new camera position from the updated spherical:\n    this[$spherical].makeSafe();\n    this.camera.position.setFromSpherical(this[$spherical]);\n    this.camera.position.add(this[$target]);\n    this.camera.setRotationFromEuler(new Euler(\n        this[$spherical].phi - Math.PI / 2, this[$spherical].theta, 0, 'YXZ'));\n\n    if (this.camera.fov !== Math.exp(this[$logFov])) {\n      this.camera.fov = Math.exp(this[$logFov]);\n      this.camera.updateProjectionMatrix();\n    }\n\n    const source =\n        this[$isUserChange] ? ChangeSource.USER_INTERACTION : ChangeSource.NONE;\n\n    this.dispatchEvent({type: 'change', source});\n  }\n\n  private get[$canInteract](): boolean {\n    if (this[$options].interactionPolicy == 'allow-when-focused') {\n      const rootNode = this.element.getRootNode() as Document | ShadowRoot;\n      return rootNode.activeElement === this.element;\n    }\n\n    return this[$options].interactionPolicy === 'always-allow';\n  }\n\n  private[$userAdjustOrbit](\n      deltaTheta: number, deltaPhi: number, deltaRadius: number,\n      deltaFov: number): boolean {\n    const handled =\n        this.adjustOrbit(deltaTheta, deltaPhi, deltaRadius, deltaFov);\n\n    this[$isUserChange] = true;\n    // Always make sure that an initial event is triggered in case there is\n    // contention between user interaction and imperative changes. This initial\n    // event will give external observers that chance to observe that\n    // interaction occurred at all:\n    this.dispatchEvent({type: 'change', source: ChangeSource.USER_INTERACTION});\n\n    return handled;\n  }\n\n  // Wraps to bewteen -pi and pi\n  private[$wrapAngle](radians: number): number {\n    const normalized = (radians + Math.PI) / (2 * Math.PI);\n    const wrapped = normalized - Math.floor(normalized);\n    return wrapped * 2 * Math.PI - Math.PI;\n  }\n\n  private[$pixelLengthToSphericalAngle](pixelLength: number): number {\n    return 2 * Math.PI * pixelLength / this.element.clientHeight;\n  }\n\n  private[$twoTouchDistance](touchOne: Touch, touchTwo: Touch): number {\n    const {clientX: xOne, clientY: yOne} = touchOne;\n    const {clientX: xTwo, clientY: yTwo} = touchTwo;\n    const xDelta = xTwo - xOne;\n    const yDelta = yTwo - yOne;\n\n    return Math.sqrt(xDelta * xDelta + yDelta * yDelta);\n  }\n\n  private[$handlePointerMove](event: MouseEvent|TouchEvent) {\n    if (!this[$pointerIsDown] || !this[$canInteract]) {\n      return;\n    }\n\n    let handled = false;\n\n    // NOTE(cdata): We test event.type as some browsers do not have a global\n    // TouchEvent contructor.\n    if (TOUCH_EVENT_RE.test(event.type)) {\n      const {touches} = event as TouchEvent;\n\n      switch (this[$touchMode]) {\n        case 'zoom':\n          if (this[$lastTouches].length > 1 && touches.length > 1) {\n            const lastTouchDistance = this[$twoTouchDistance](\n                this[$lastTouches][0], this[$lastTouches][1]);\n            const touchDistance =\n                this[$twoTouchDistance](touches[0], touches[1]);\n            const deltaFov = -1 * ZOOM_SENSITIVITY *\n                (touchDistance - lastTouchDistance) / 10.0;\n\n            handled = this[$userAdjustOrbit](0, 0, 0, deltaFov);\n          }\n\n          break;\n        case 'rotate':\n          handled = this[$handleSinglePointerMove](touches[0]);\n          break;\n      }\n\n      this[$lastTouches] = touches;\n    } else {\n      handled = this[$handleSinglePointerMove](event as MouseEvent);\n    }\n\n    if ((handled || this[$options].eventHandlingBehavior === 'prevent-all') &&\n        event.cancelable) {\n      event.preventDefault();\n    };\n  }\n\n  private[$handleSinglePointerMove](pointer: Pointer): boolean {\n    const {clientX, clientY} = pointer;\n    const deltaTheta = this[$pixelLengthToSphericalAngle](\n        clientX - this[$lastPointerPosition].clientX);\n    const deltaPhi = this[$pixelLengthToSphericalAngle](\n        clientY - this[$lastPointerPosition].clientY);\n\n    this[$lastPointerPosition].clientX = clientX;\n    this[$lastPointerPosition].clientY = clientY;\n\n    return this[$userAdjustOrbit](deltaTheta, deltaPhi, 0, 0);\n  }\n\n  private[$handlePointerDown](event: MouseEvent|TouchEvent) {\n    this[$pointerIsDown] = true;\n\n    if (TOUCH_EVENT_RE.test(event.type)) {\n      const {touches} = event as TouchEvent;\n\n      switch (touches.length) {\n        default:\n        case 1:\n          this[$touchMode] = 'rotate';\n          this[$handleSinglePointerDown](touches[0]);\n          break;\n        case 2:\n          this[$touchMode] = 'zoom';\n          break;\n      }\n\n      this[$lastTouches] = touches;\n    } else {\n      this[$handleSinglePointerDown](event as MouseEvent);\n    }\n  }\n\n  private[$handleSinglePointerDown](pointer: Pointer) {\n    this[$lastPointerPosition].clientX = pointer.clientX;\n    this[$lastPointerPosition].clientY = pointer.clientY;\n    this.element.style.cursor = 'grabbing';\n  }\n\n  private[$handlePointerUp](_event: MouseEvent|TouchEvent) {\n    this.element.style.cursor = 'grab';\n    this[$pointerIsDown] = false;\n  }\n\n  private[$handleWheel](event: Event) {\n    if (!this[$canInteract]) {\n      return;\n    }\n\n    const deltaFov = (event as WheelEvent).deltaY * ZOOM_SENSITIVITY / 30;\n\n    if ((this[$userAdjustOrbit](0, 0, 0, deltaFov) ||\n         this[$options].eventHandlingBehavior === 'prevent-all') &&\n        event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  private[$handleKey](event: KeyboardEvent) {\n    // We track if the key is actually one we respond to, so as not to\n    // accidentally clober unrelated key inputs when the <model-viewer> has\n    // focus and eventHandlingBehavior is set to 'prevent-all'.\n    let relevantKey = false;\n    let handled = false;\n\n    switch (event.keyCode) {\n      case KeyCode.PAGE_UP:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](0, 0, 0, ZOOM_SENSITIVITY);\n        break;\n      case KeyCode.PAGE_DOWN:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](0, 0, 0, -1 * ZOOM_SENSITIVITY);\n        break;\n      case KeyCode.UP:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](0, -KEYBOARD_ORBIT_INCREMENT, 0, 0);\n        break;\n      case KeyCode.DOWN:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](0, KEYBOARD_ORBIT_INCREMENT, 0, 0);\n        break;\n      case KeyCode.LEFT:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](-KEYBOARD_ORBIT_INCREMENT, 0, 0, 0);\n        break;\n      case KeyCode.RIGHT:\n        relevantKey = true;\n        handled = this[$userAdjustOrbit](KEYBOARD_ORBIT_INCREMENT, 0, 0, 0);\n        break;\n    }\n\n    if (relevantKey &&\n        (handled || this[$options].eventHandlingBehavior === 'prevent-all') &&\n        event.cancelable) {\n      event.preventDefault();\n    }\n  }\n}\n"]}