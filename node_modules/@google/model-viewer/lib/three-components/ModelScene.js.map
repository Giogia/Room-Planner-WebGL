{"version":3,"file":"ModelScene.js","sourceRoot":"","sources":["../../src/three-components/ModelScene.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Camera, Event as ThreeEvent, Object3D, PerspectiveCamera, Scene, Vector3} from 'three';\n\nimport ModelViewerElementBase, {$needsRender, $renderer} from '../model-viewer-base.js';\nimport {resolveDpr} from '../utilities.js';\n\nimport Model, {DEFAULT_FOV_DEG} from './Model.js';\nimport {Shadow} from './Shadow.js';\n\nexport interface ModelLoadEvent extends ThreeEvent {\n  url: string\n}\n\nexport interface ModelSceneConfig {\n  element: ModelViewerElementBase;\n  canvas: HTMLCanvasElement;\n  width: number;\n  height: number;\n}\n\nexport type IlluminationRole = 'primary'|'secondary'\n\nexport const IlluminationRole: {[index: string]: IlluminationRole} = {\n  Primary: 'primary',\n  Secondary: 'secondary'\n};\n\nconst DEFAULT_TAN_FOV = Math.tan((DEFAULT_FOV_DEG / 2) * Math.PI / 180);\n\nconst $paused = Symbol('paused');\n\n/**\n * A THREE.Scene object that takes a Model and CanvasHTMLElement and\n * constructs a framed scene based off of the canvas dimensions.\n * Provides lights and cameras to be used in a renderer.\n */\nexport class ModelScene extends Scene {\n  private[$paused]: boolean = false;\n\n  public aspect = 1;\n  public canvas: HTMLCanvasElement;\n  public shadow: Shadow|null = null;\n  public shadowIntensity = 0;\n  public shadowSoftness = 1;\n  public pivot: Object3D;\n  public pivotCenter: Vector3;\n  public width = 1;\n  public height = 1;\n  public isVisible: boolean = false;\n  public isDirty: boolean = false;\n  public element: ModelViewerElementBase;\n  public context: CanvasRenderingContext2D;\n  public exposure = 1;\n  public model: Model;\n  public framedFieldOfView = DEFAULT_FOV_DEG;\n  public activeCamera: Camera;\n  // These default camera values are never used, as they are reset once the\n  // model is loaded and framing is computed.\n  public camera = new PerspectiveCamera(45, 1, 0.1, 100);\n\n  constructor({canvas, element, width, height}: ModelSceneConfig) {\n    super();\n\n    this.name = 'ModelScene';\n\n    this.element = element;\n    this.canvas = canvas;\n    this.context = canvas.getContext('2d')!;\n\n    this.model = new Model();\n\n    // These default camera values are never used, as they are reset once the\n    // model is loaded and framing is computed.\n    this.camera = new PerspectiveCamera(45, 1, 0.1, 100);\n    this.camera.name = 'MainCamera';\n\n    this.activeCamera = this.camera;\n    this.pivot = new Object3D();\n    this.pivot.name = 'Pivot';\n    this.pivotCenter = new Vector3;\n\n    this.add(this.pivot);\n    this.pivot.add(this.model);\n\n    this.setSize(width, height);\n\n    this.model.addEventListener(\n        'model-load', (event: any) => this.onModelLoad(event));\n  }\n\n  get paused() {\n    return this[$paused];\n  }\n\n  pause() {\n    this[$paused] = true;\n  }\n\n  resume() {\n    this[$paused] = false;\n  }\n\n  /**\n   * Sets the model via URL.\n   */\n  async setModelSource(\n      source: string|null, progressCallback?: (progress: number) => void) {\n    try {\n      await this.model.setSource(source, progressCallback);\n    } catch (e) {\n      throw new Error(\n          `Could not set model source to '${source}': ${e.message}`);\n    }\n  }\n\n  /**\n   * Receives the size of the 2D canvas element to make according\n   * adjustments in the scene.\n   */\n  setSize(width: number, height: number) {\n    if (width !== this.width || height !== this.height) {\n      this.width = Math.max(width, 1);\n      this.height = Math.max(height, 1);\n      // In practice, invocations of setSize are throttled at the element level,\n      // so no need to throttle here:\n      const dpr = resolveDpr();\n      this.canvas.width = this.width * dpr;\n      this.canvas.height = this.height * dpr;\n      this.canvas.style.width = `${this.width}px`;\n      this.canvas.style.height = `${this.height}px`;\n      this.aspect = this.width / this.height;\n      this.frameModel();\n\n      // Immediately queue a render to happen at microtask timing. This is\n      // necessary because setting the width and height of the canvas has the\n      // side-effect of clearing it, and also if we wait for the next rAF to\n      // render again we might get hit with yet-another-resize, or worse we\n      // may not actually be marked as dirty and so render will just not\n      // happen. Queuing a render to happen here means we will render twice on\n      // a resize frame, but it avoids most of the visual artifacts associated\n      // with other potential mitigations for this problem. See discussion in\n      // https://github.com/GoogleWebComponents/model-viewer/pull/619 for\n      // additional considerations.\n      Promise.resolve().then(() => {\n        this.element[$renderer].render(performance.now());\n      });\n    }\n  }\n\n  /**\n   * Set's the framedFieldOfView based on the aspect ratio of the window in\n   * order to keep the model fully visible at any camera orientation.\n   */\n  frameModel() {\n    const vertical = DEFAULT_TAN_FOV *\n        Math.max(1, this.model.fieldOfViewAspect / this.aspect);\n    this.framedFieldOfView = 2 * Math.atan(vertical) * 180 / Math.PI;\n  }\n\n  /**\n   * Returns the size of the corresponding canvas element.\n   */\n  getSize(): {width: number, height: number} {\n    return {width: this.width, height: this.height};\n  }\n\n  /**\n   * Returns the current camera.\n   */\n  getCamera(): Camera {\n    return this.activeCamera;\n  }\n\n  /**\n   * Sets the passed in camera to be used for rendering.\n   */\n  setCamera(camera: Camera) {\n    this.activeCamera = camera;\n  }\n\n  /**\n   * Sets the rotation of the model's pivot, around its pivotCenter point.\n   */\n  setPivotRotation(radiansY: number) {\n    this.pivot.rotation.y = radiansY;\n    this.pivot.position.x = -this.pivotCenter.x;\n    this.pivot.position.z = -this.pivotCenter.z;\n    this.pivot.position.applyAxisAngle(this.pivot.up, radiansY);\n    this.pivot.position.x += this.pivotCenter.x;\n    this.pivot.position.z += this.pivotCenter.z;\n    if (this.shadow != null) {\n      this.shadow.setRotation(radiansY);\n    }\n  }\n\n  /**\n   * Gets the current rotation value of the pivot\n   */\n  getPivotRotation(): number {\n    return this.pivot.rotation.y;\n  }\n\n  /**\n   * Called when the model's contents have loaded, or changed.\n   */\n  onModelLoad(event: {url: string}) {\n    this.frameModel();\n    this.setShadowIntensity(this.shadowIntensity);\n    if (this.shadow != null) {\n      this.shadow.setModel(this.model, this.shadowSoftness);\n    }\n    // Uncomment if using showShadowHelper below\n    // if (this.children.length > 1) {\n    //   (this.children[1] as CameraHelper).update();\n    // }\n    this.element[$needsRender]();\n    this.dispatchEvent({type: 'model-load', url: event.url});\n  }\n\n  /**\n   * Sets the shadow's intensity, lazily creating the shadow as necessary.\n   */\n  setShadowIntensity(shadowIntensity: number) {\n    this.shadowIntensity = shadowIntensity;\n    if (shadowIntensity > 0 && this.model.hasModel()) {\n      if (this.shadow == null) {\n        this.shadow = new Shadow(this.model, this.pivot, this.shadowSoftness);\n        this.pivot.add(this.shadow);\n        // showShadowHelper(this);\n      }\n      this.shadow.setIntensity(shadowIntensity);\n    }\n  }\n\n  /**\n   * Sets the shadow's softness by mapping a [0, 1] softness parameter to the\n   * shadow's resolution. This involves reallocation, so it should not be\n   * changed frequently. Softer shadows are cheaper to render.\n   */\n  setShadowSoftness(softness: number) {\n    this.shadowSoftness = softness;\n    if (this.shadow != null) {\n      this.shadow.setSoftness(softness);\n    }\n  }\n}\n"]}