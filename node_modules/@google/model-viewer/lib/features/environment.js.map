{"version":3,"file":"environment.js","sourceRoot":"","sources":["../../src/features/environment.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit-element';\nimport {Texture} from 'three';\n\nimport ModelViewerElementBase, {$isInRenderTree, $needsRender, $onModelLoad, $progressTracker, $renderer, $scene} from '../model-viewer-base.js';\nimport {Constructor, deserializeUrl} from '../utilities.js';\n\nconst DEFAULT_SHADOW_INTENSITY = 0.0;\nconst DEFAULT_SHADOW_SOFTNESS = 1.0;\nconst DEFAULT_EXPOSURE = 1.0;\n\nconst $currentEnvironmentMap = Symbol('currentEnvironmentMap');\nconst $applyEnvironmentMap = Symbol('applyEnvironmentMap');\nconst $updateEnvironment = Symbol('updateEnvironment');\nconst $cancelEnvironmentUpdate = Symbol('cancelEnvironmentUpdate');\n\nexport declare interface EnvironmentInterface {\n  environmentImage: string|null;\n  skyboxImage: string|null;\n  shadowIntensity: number;\n  shadowSoftness: number;\n  exposure: number;\n}\n\nexport const EnvironmentMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement: T): Constructor<EnvironmentInterface>&T => {\n  class EnvironmentModelViewerElement extends ModelViewerElement {\n    @property({\n      type: String,\n      attribute: 'environment-image',\n      converter: {fromAttribute: deserializeUrl}\n    })\n    environmentImage: string|null = null;\n\n    @property({\n      type: String,\n      attribute: 'skybox-image',\n      converter: {fromAttribute: deserializeUrl}\n    })\n    skyboxImage: string|null = null;\n\n    @property({type: Number, attribute: 'shadow-intensity'})\n    shadowIntensity: number = DEFAULT_SHADOW_INTENSITY;\n\n    @property({type: Number, attribute: 'shadow-softness'})\n    shadowSoftness: number = DEFAULT_SHADOW_SOFTNESS;\n\n    @property({\n      type: Number,\n    })\n    exposure: number = DEFAULT_EXPOSURE;\n\n    private[$currentEnvironmentMap]: Texture|null = null;\n\n    private[$cancelEnvironmentUpdate]: ((...args: any[]) => any)|null = null;\n\n    updated(changedProperties: Map<string|number|symbol, unknown>) {\n      super.updated(changedProperties);\n\n      if (changedProperties.has('shadowIntensity')) {\n        this[$scene].setShadowIntensity(this.shadowIntensity);\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('shadowSoftness')) {\n        this[$scene].setShadowSoftness(this.shadowSoftness);\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('exposure')) {\n        this[$scene].exposure = this.exposure;\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('environmentImage') ||\n          changedProperties.has('skyboxImage') ||\n          changedProperties.has('experimentalPmrem') ||\n          changedProperties.has($isInRenderTree)) {\n        this[$updateEnvironment]();\n      }\n    }\n\n    [$onModelLoad](event: any) {\n      super[$onModelLoad](event);\n\n      if (this[$currentEnvironmentMap] != null) {\n        this[$applyEnvironmentMap](this[$currentEnvironmentMap]);\n      }\n    }\n\n    async[$updateEnvironment]() {\n      if (!this[$isInRenderTree]) {\n        return;\n      }\n\n      const {skyboxImage, environmentImage} = this;\n\n      if (this[$cancelEnvironmentUpdate] != null) {\n        this[$cancelEnvironmentUpdate]!();\n        this[$cancelEnvironmentUpdate] = null;\n      }\n\n      const {textureUtils} = this[$renderer];\n\n      if (textureUtils == null) {\n        return;\n      }\n\n      try {\n        const {environmentMap, skybox} =\n            await new Promise(async (resolve, reject) => {\n              const texturesLoad = textureUtils.generateEnvironmentMapAndSkybox(\n                  skyboxImage,\n                  environmentImage,\n                  {progressTracker: this[$progressTracker]});\n              this[$cancelEnvironmentUpdate] = () => reject(texturesLoad);\n              resolve(await texturesLoad);\n            });\n\n        if (skybox != null) {\n          this[$scene].background = skybox.texture;\n        } else {\n          this[$scene].background = null;\n        }\n\n        this[$applyEnvironmentMap](environmentMap.texture);\n        this[$scene].model.dispatchEvent({type: 'envmap-update'});\n      } catch (errorOrPromise) {\n        if (errorOrPromise instanceof Error) {\n          this[$applyEnvironmentMap](null);\n          throw errorOrPromise;\n        }\n\n        const {environmentMap, skybox} = await errorOrPromise;\n\n        if (environmentMap != null) {\n          environmentMap.dispose();\n        }\n\n        if (skybox != null) {\n          skybox.dispose();\n        }\n      }\n    }\n\n    /**\n     * Sets the Model to use the provided environment map,\n     * or `null` if the Model should remove its' environment map.\n     */\n    private[$applyEnvironmentMap](environmentMap: Texture|null) {\n      this[$currentEnvironmentMap] = environmentMap;\n      this[$scene].environment = this[$currentEnvironmentMap];\n      this.dispatchEvent(new CustomEvent('environment-change'));\n\n      this[$needsRender]();\n    }\n  }\n\n  return EnvironmentModelViewerElement;\n};\n"]}