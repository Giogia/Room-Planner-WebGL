{"version":3,"file":"loading.js","sourceRoot":"","sources":["../../src/features/loading.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit-element';\n\nimport ModelViewerElementBase, {$ariaLabel, $canvas, $getLoaded, $getModelIsVisible, $isInRenderTree, $progressTracker, $updateSource} from '../model-viewer-base.js';\nimport {$loader, CachingGLTFLoader} from '../three-components/CachingGLTFLoader.js';\nimport {Constructor, debounce, deserializeUrl, throttle} from '../utilities.js';\n\nimport {LoadingStatusAnnouncer} from './loading/status-announcer.js';\n\nexport type RevealAttributeValue = 'auto'|'interaction';\ntype DismissalSource = 'interaction';\n\nexport const POSTER_TRANSITION_TIME = 300;\nexport const PROGRESS_BAR_UPDATE_THRESHOLD = 100;\nconst PROGRESS_MASK_BASE_OPACITY = 0.2;\nconst ANNOUNCE_MODEL_VISIBILITY_DEBOUNCE_THRESHOLD = 0;\n\nconst DEFAULT_DRACO_DECODER_LOCATION =\n    'https://www.gstatic.com/draco/versioned/decoders/1.3.5/';\n\nconst SPACE_KEY = 32;\nconst ENTER_KEY = 13;\n\nconst RevealStrategy: {[index: string]: RevealAttributeValue} = {\n  AUTO: 'auto',\n  INTERACTION: 'interaction'\n};\n\nconst PosterDismissalSource: {[index: string]: DismissalSource} = {\n  INTERACTION: 'interaction'\n};\n\nconst loader = new CachingGLTFLoader();\nconst loadingStatusAnnouncer = new LoadingStatusAnnouncer();\n\nexport const $defaultProgressBarElement = Symbol('defaultProgressBarElement');\nexport const $defaultProgressMaskElement = Symbol('defaultProgressMaskElement');\n\nexport const $posterContainerElement = Symbol('posterContainerElement');\nexport const $defaultPosterElement = Symbol('defaultPosterElement');\n\nconst $posterDismissalSource = Symbol('posterDismissalSource');\n\nconst $announceModelVisibility = Symbol('announceModelVisibility');\nconst $modelIsReadyForReveal = Symbol('modelIsReadyForReveal');\nconst $shouldAttemptPreload = Symbol('shouldAttemptPreload');\nconst $shouldRevealModel = Symbol('shouldRevealModel');\nconst $showPoster = Symbol('showPoster');\nconst $hidePoster = Symbol('hidePoster');\nconst $modelIsVisible = Symbol('modelIsVisible');\nconst $preloadAttempted = Symbol('preloadAttempted');\nconst $sourceUpdated = Symbol('sourceUpdated');\n\nconst $updateLoadingAndVisibility = Symbol('updateLoadingAndVisibility');\n\nconst $updateProgressBar = Symbol('updateProgressBar');\nconst $lastReportedProgress = Symbol('lastReportedProgress');\n\nconst $ariaLabelCallToAction = Symbol('ariaLabelCallToAction');\n\nconst $clickHandler = Symbol('clickHandler');\nconst $keydownHandler = Symbol('keydownHandler');\nconst $progressHandler = Symbol('processHandler');\nconst $onClick = Symbol('onClick');\nconst $onKeydown = Symbol('onKeydown');\nconst $onProgress = Symbol('onProgress');\n\nexport declare interface LoadingInterface {\n  poster: string|null;\n  reveal: RevealAttributeValue;\n  preload: boolean;\n  readonly loaded: boolean;\n  readonly modelIsVisible: boolean;\n  dismissPoster(): void;\n}\n\nexport declare interface LoadingStaticInterface {\n  dracoDecoderLocation: string;\n  mapURLs(callback: (url: string) => string): void;\n}\n\ninterface ModelViewerGlobalConfig {\n  dracoDecoderLocation?: string;\n}\n\n/**\n * LoadingMixin implements features related to lazy loading, as well as\n * presentation details related to the pre-load / pre-render presentation of a\n * <model-viewer>\n *\n * This mixin implements support for models with DRACO-compressed meshes.\n * The DRACO decoder will be loaded on-demand if a glTF that uses the DRACO mesh\n * compression extension is encountered.\n *\n * By default, the DRACO decoder will be loaded from a Google CDN. It is\n * possible to customize where the decoder is loaded from by defining a global\n * configuration option for `<model-viewer>` like so:\n *\n * ```html\n * <script>\n * ModelViewerElement = self.ModelViewerElement || {};\n * ModelViewerElement.dracoDecoderLocation =\n *     'http://example.com/location/of/draco/decoder/files/';\n * </script>\n * ```\n *\n * Note that the above configuration strategy must be performed *before* the\n * first `<model-viewer>` element is created in the browser. The configuration\n * can be done anywhere, but the easiest way to ensure it is done at the right\n * time is to do it in the `<head>` of the HTML document. This is the\n * recommended way to set the location because it is most compatible with\n * scenarios where the `<model-viewer>` library is lazily loaded.\n *\n * If you absolutely have to set the DRACO decoder location *after* the first\n * `<model-viewer>` element is created, you can do it this way:\n *\n * ```html\n * <script>\n * const ModelViewerElement = customElements.get('model-viewer');\n * ModelViewerElement.dracoDecoderLocation =\n *     'http://example.com/location/of/draco/decoder/files/';\n * </script>\n * ```\n *\n * Note that the above configuration approach will not work until *after*\n * `<model-viewer>` is defined in the browser. Also note that this configuration\n * *must* be set *before* the first DRACO model is fully loaded.\n *\n * It is recommended that users who intend to take advantage of DRACO mesh\n * compression consider whether or not it is acceptable for their use case to\n * have code side-loaded from a Google CDN. If it is not acceptable, then the\n * location must be customized before loading any DRACO models in order to cause\n * the decoder to be loaded from an alternative, acceptable location.\n */\nexport const LoadingMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement:\n        T): Constructor<LoadingInterface, LoadingStaticInterface>&T => {\n  class LoadingModelViewerElement extends ModelViewerElement {\n    static set dracoDecoderLocation(value: string) {\n      CachingGLTFLoader.setDRACODecoderLocation(value);\n    }\n\n    static get dracoDecoderLocation() {\n      return CachingGLTFLoader.getDRACODecoderLocation();\n    }\n\n    /**\n     * If provided, the callback will be passed each resource URL before a\n     * request is sent. The callback may return the original URL, or a new URL\n     * to override loading behavior. This behavior can be used to load assets\n     * from .ZIP files, drag-and-drop APIs, and Data URIs.\n     */\n    static mapURLs(callback: (url: string) => string) {\n      loader[$loader].manager.setURLModifier(callback);\n    }\n\n    /**\n     * A URL pointing to the image to use as a poster in scenarios where the\n     * <model-viewer> is not ready to reveal a rendered model to the viewer.\n     */\n    @property({converter: {fromAttribute: deserializeUrl}})\n    poster: string|null = null;\n\n    /**\n     * An enumerable attribute describing under what conditions the\n     * <model-viewer> should reveal a model to the viewer.\n     *\n     * The default value is \"auto\". The only supported alternative value as\n     * of now is \"interaction\".\n     */\n    @property({type: String})\n    reveal: RevealAttributeValue = RevealStrategy.AUTO;\n\n    /**\n     * If true, a configured model file will be aggressively loaded, even if\n     * the <model-viewer> is only configured to reveal upon interaction.\n     */\n    @property({type: Boolean}) preload: boolean = false;\n\n    /**\n     * Dismisses the poster, causing the model to load and render if\n     * necessary. This is currently effectively the same as interacting with\n     * the poster via user input.\n     */\n    dismissPoster() {\n      this[$posterDismissalSource] = PosterDismissalSource.INTERACTION;\n      this.requestUpdate();\n    }\n\n    protected[$modelIsVisible] = false;\n    protected[$preloadAttempted] = false;\n    protected[$sourceUpdated] = false;\n\n    protected[$lastReportedProgress]: number = 0;\n\n    protected[$posterDismissalSource]: DismissalSource|null = null;\n\n    // TODO: Add this to the shadow root as part of this mixin's\n    // implementation:\n    protected[$posterContainerElement]: HTMLElement =\n        this.shadowRoot!.querySelector('.slot.poster') as HTMLElement;\n\n    protected[$defaultPosterElement]: HTMLElement =\n        this.shadowRoot!.querySelector('#default-poster') as HTMLElement;\n\n    protected[$defaultProgressBarElement]: HTMLElement =\n        this.shadowRoot!.querySelector('#default-progress-bar > .bar') as\n        HTMLElement;\n\n    protected[$defaultProgressMaskElement]: HTMLElement =\n        this.shadowRoot!.querySelector('#default-progress-bar > .mask') as\n        HTMLElement;\n\n    protected[$ariaLabelCallToAction] =\n        this[$defaultPosterElement].getAttribute('aria-label');\n\n    protected[$clickHandler]: () => void = () => this[$onClick]();\n    protected[$keydownHandler]:\n        (event: KeyboardEvent) => void = (event) => this[$onKeydown](event);\n    protected[$progressHandler]:\n        (event: Event) => void = (event) => this[$onProgress](event);\n\n    protected[$announceModelVisibility] = debounce((visible: boolean) => {\n      this.dispatchEvent(\n          new CustomEvent('model-visibility', {detail: {visible}}));\n    }, ANNOUNCE_MODEL_VISIBILITY_DEBOUNCE_THRESHOLD);\n\n    protected[$updateProgressBar] = throttle((progress: number) => {\n      const parentNode = this[$defaultProgressBarElement].parentNode as Element;\n\n      requestAnimationFrame(() => {\n        this[$defaultProgressMaskElement].style.opacity =\n            `${(1.0 - progress) * PROGRESS_MASK_BASE_OPACITY}`;\n\n        this[$defaultProgressBarElement].style.transform =\n            `scaleX(${progress})`;\n\n        if (progress === 0) {\n          // NOTE(cdata): We remove and re-append the progress bar in this\n          // condition so that the progress bar does not appear to\n          // transition backwards from the right when we reset to 0 (or\n          // otherwise <1) progress after having already reached 1 progress\n          // previously.\n          parentNode.removeChild(this[$defaultProgressBarElement]);\n          parentNode.appendChild(this[$defaultProgressBarElement]);\n        }\n\n        // NOTE(cdata): IE11 does not properly respect the second parameter\n        // of classList.toggle, which this implementation originally used.\n        // @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11865865/\n        if (progress === 1.0) {\n          this[$defaultProgressBarElement].classList.add('hide');\n        } else {\n          this[$defaultProgressBarElement].classList.remove('hide');\n        }\n      });\n    }, PROGRESS_BAR_UPDATE_THRESHOLD);\n\n    constructor(...args: Array<any>) {\n      super(...args);\n\n      const ModelViewerElement: ModelViewerGlobalConfig =\n          (self as any).ModelViewerElement || {};\n      const dracoDecoderLocation = ModelViewerElement.dracoDecoderLocation ||\n          DEFAULT_DRACO_DECODER_LOCATION;\n\n      CachingGLTFLoader.setDRACODecoderLocation(dracoDecoderLocation);\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n\n      // Fired when a user first clicks the model element. Used to\n      // change the visibility of a poster image, or start loading\n      // a model.\n      this[$posterContainerElement].addEventListener(\n          'click', this[$clickHandler]);\n      this[$posterContainerElement].addEventListener(\n          'keydown', this[$keydownHandler]);\n      this[$progressTracker].addEventListener(\n          'progress', this[$progressHandler]);\n\n      loadingStatusAnnouncer.registerInstance(this);\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      this[$posterContainerElement].removeEventListener(\n          'click', this[$clickHandler]);\n      this[$posterContainerElement].removeEventListener(\n          'keydown', this[$keydownHandler]);\n      this[$progressTracker].removeEventListener(\n          'progress', this[$progressHandler]);\n\n      loadingStatusAnnouncer.unregisterInstance(this)\n    }\n\n    async updated(changedProperties: Map<string, any>) {\n      super.updated(changedProperties);\n\n      if (changedProperties.has('poster') && this.poster != null) {\n        this[$defaultPosterElement].style.backgroundImage =\n            `url(${this.poster})`;\n      }\n\n      if (changedProperties.has('src')) {\n        if (!this[$modelIsReadyForReveal]) {\n          this[$lastReportedProgress] = 0;\n        }\n\n        this[$posterDismissalSource] = null;\n        this[$preloadAttempted] = false;\n        this[$sourceUpdated] = false;\n      }\n\n      if (changedProperties.has('alt')) {\n        this[$defaultPosterElement].setAttribute(\n            'aria-label',\n            `${this[$ariaLabel]}. ${this[$ariaLabelCallToAction]}`);\n      }\n\n      this[$updateLoadingAndVisibility]()\n    }\n\n    [$onClick]() {\n      this[$posterDismissalSource] = PosterDismissalSource.INTERACTION;\n      this.requestUpdate();\n    }\n\n    [$onKeydown](event: KeyboardEvent) {\n      switch (event.keyCode) {\n        // NOTE(cdata): Links and buttons can typically be activated with\n        // both spacebar and enter to produce a synthetic click action\n        case SPACE_KEY:\n        case ENTER_KEY:\n          this[$posterDismissalSource] = PosterDismissalSource.INTERACTION;\n          break;\n        default:\n          break;\n      }\n\n      this.requestUpdate();\n    }\n\n    [$onProgress](event: Event) {\n      const progress = (event as any).detail.totalProgress;\n\n      this.requestUpdate();\n\n      if (progress === 1.0) {\n        this[$updateProgressBar].flush();\n      }\n\n      this[$updateProgressBar](progress);\n\n      this.dispatchEvent(\n          new CustomEvent('progress', {detail: {totalProgress: progress}}));\n\n      this[$lastReportedProgress] =\n          Math.max(progress, this[$lastReportedProgress]);\n    }\n\n    get[$modelIsReadyForReveal](): boolean {\n      const {src} = this;\n\n      return !!src && CachingGLTFLoader.hasFinishedLoading(src) &&\n          this[$lastReportedProgress] === 1.0 && this[$shouldRevealModel]\n    }\n\n    get[$shouldRevealModel](): boolean {\n      return this.reveal === RevealStrategy.AUTO ||\n          !!this[$posterDismissalSource];\n    }\n\n    get[$shouldAttemptPreload](): boolean {\n      const {src} = this;\n\n      return !!src && (this.preload || this[$shouldRevealModel]) &&\n          this[$isInRenderTree];\n    }\n\n    async[$updateLoadingAndVisibility]() {\n      if (this[$shouldAttemptPreload] && !this[$preloadAttempted]) {\n        this[$preloadAttempted] = true;\n\n        const updatePreloadProgress = this[$progressTracker].beginActivity();\n\n        try {\n          const src = this.src!;\n          const detail = {url: src};\n\n          await loader.preload(src, updatePreloadProgress);\n          this.dispatchEvent(new CustomEvent('preload', {detail}));\n        } catch (error) {\n          this.dispatchEvent(new CustomEvent(\n              'error', {detail: {type: 'loadfailure', sourceError: error}}));\n        } finally {\n          updatePreloadProgress(1.0);\n          this.requestUpdate();\n        }\n      }\n\n      if (this[$modelIsReadyForReveal]) {\n        await this[$updateSource]();\n      } else {\n        this[$showPoster]();\n      }\n    }\n\n    [$showPoster]() {\n      const posterContainerElement = this[$posterContainerElement];\n      const defaultPosterElement = this[$defaultPosterElement];\n      const posterContainerOpacity =\n          parseFloat(self.getComputedStyle(posterContainerElement).opacity!);\n\n      defaultPosterElement.removeAttribute('tabindex');\n      defaultPosterElement.removeAttribute('aria-hidden');\n      posterContainerElement.classList.add('show');\n\n      if (posterContainerOpacity < 1.0) {\n        posterContainerElement.addEventListener('transitionend', () => {\n          this[$modelIsVisible] = false;\n          this[$announceModelVisibility](false);\n        }, {once: true});\n      }\n    }\n\n    [$hidePoster]() {\n      const posterContainerElement = this[$posterContainerElement];\n      const defaultPosterElement = this[$defaultPosterElement];\n\n      if (posterContainerElement.classList.contains('show')) {\n        posterContainerElement.classList.remove('show');\n\n        // We might need to forward focus to our internal canvas, but that\n        // cannot happen until the poster has completely transitioned away\n        posterContainerElement.addEventListener('transitionend', () => {\n          this[$announceModelVisibility](true);\n          requestAnimationFrame(() => {\n            this[$modelIsVisible] = true;\n\n            const root = this.getRootNode();\n\n            // If the <model-viewer> is still focused, forward the focus to\n            // the canvas that has just been revealed\n            if (root &&\n                (root as Document | ShadowRoot).activeElement === this) {\n              this[$canvas].focus();\n            }\n\n            // Ensure that the poster is no longer focusable or visible to\n            // screen readers\n            defaultPosterElement.setAttribute('aria-hidden', 'true');\n            defaultPosterElement.tabIndex = -1;\n          });\n        }, {once: true});\n      }\n    }\n\n    [$getModelIsVisible]() {\n      return super[$getModelIsVisible]() || this[$modelIsVisible];\n    }\n\n    [$getLoaded]() {\n      const src = this.src;\n      return super[$getLoaded]() ||\n          !!(src && CachingGLTFLoader.hasFinishedLoading(src));\n    }\n\n    async[$updateSource]() {\n      if (this[$modelIsReadyForReveal] && !this[$sourceUpdated]) {\n        this[$sourceUpdated] = true;\n        await super[$updateSource]();\n        this[$hidePoster]();\n      }\n    }\n  }\n\n  return LoadingModelViewerElement;\n};\n"]}