{"version":3,"file":"hotspot.js","sourceRoot":"","sources":["../../../src/features/annotation/hotspot.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Vector3} from 'three';\nimport {CSS2DObject} from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport {normalizeUnit} from '../../styles/conversions.js';\nimport {NumberNode, parseExpressions} from '../../styles/parsers.js';\n\nexport interface HotspotVisibilityDetails {\n  visible: boolean;\n}\n\n/**\n * Hotspots are configured by slot name, and this name must begin with \"hotspot\"\n * to be recognized. The position and normal strings are in the form of the\n * camera-target attribute and default to \"0m 0m 0m\" and \"0m 1m 0m\",\n * respectively.\n */\nexport interface HotspotConfiguration {\n  name: string;\n  position?: string;\n  normal?: string;\n}\n\nconst $slot = Symbol('slot');\nconst $referenceCount = Symbol('referenceCount');\nconst $updateVisibility = Symbol('updateVisibility');\nconst $visible = Symbol('visible');\n\nconst $onSlotchange = Symbol('onSlotchange');\nconst $slotchangeHandler = Symbol('slotchangeHandler');\n\n/**\n * The Hotspot object is a reference-counted slot. If decrement() returns true,\n * it should be removed from the tree so it can be garbage-collected.\n */\nexport class Hotspot extends CSS2DObject {\n  public normal: Vector3 = new Vector3(0, 1, 0);\n  private[$visible] = false;\n  private[$referenceCount] = 1;\n  private[$slot]: HTMLSlotElement = document.createElement('slot');\n  private[$slotchangeHandler] = () => this[$onSlotchange]();\n\n  constructor(config: HotspotConfiguration) {\n    super(document.createElement('div'));\n\n    this.element.classList.add('annotation-wrapper');\n\n    this[$slot].name = config.name;\n    this[$slot].addEventListener('slotchange', this[$slotchangeHandler]);\n\n    this.element.appendChild(this[$slot]);\n\n    this.updatePosition(config.position);\n    this.updateNormal(config.normal);\n\n    this.show();\n  }\n\n  /**\n   * Sets the hotspot to be in the highly visible foreground state.\n   */\n  show() {\n    if (!this[$visible]) {\n      this[$visible] = true;\n      this[$updateVisibility]({notify: true});\n    }\n  }\n\n  /**\n   * Sets the hotspot to be in the diminished background state.\n   */\n  hide() {\n    if (this[$visible]) {\n      this[$visible] = false;\n      this[$updateVisibility]({notify: true});\n    }\n  }\n\n  /**\n   * Cleans up the held references of this Hotspot when it is done being used.\n   */\n  dispose() {\n    this[$slot].removeEventListener('slotchange', this[$slotchangeHandler]);\n  }\n\n  /**\n   * Call this when adding elements to the same slot to keep track.\n   */\n  increment() {\n    this[$referenceCount]++;\n  }\n\n  /**\n   * Call this when removing elements from the slot; returns true when the slot\n   * is unused.\n   */\n  decrement(): boolean {\n    if (this[$referenceCount] > 0) {\n      --this[$referenceCount];\n    }\n    return this[$referenceCount] === 0;\n  }\n\n  /**\n   * Change the position of the hotspot to the input string, in the same format\n   * as the data-position attribute.\n   */\n  updatePosition(position?: string) {\n    if (position == null)\n      return;\n    const positionNodes = parseExpressions(position)[0].terms;\n    for (let i = 0; i < 3; ++i) {\n      this.position.setComponent(\n          i, normalizeUnit(positionNodes[i] as NumberNode<'m'>).number);\n    }\n  }\n\n  /**\n   * Change the hotspot's normal to the input string, in the same format as the\n   * data-normal attribute.\n   */\n  updateNormal(normal?: string) {\n    if (normal == null)\n      return;\n    const normalNodes = parseExpressions(normal)[0].terms;\n    for (let i = 0; i < 3; ++i) {\n      this.normal.setComponent(\n          i, normalizeUnit(normalNodes[i] as NumberNode<'m'>).number);\n    }\n  }\n\n  protected[$updateVisibility]({notify}: {notify: boolean}) {\n    // NOTE: IE11 doesn't support a second arg for classList.toggle\n    if (this[$visible]) {\n      this.element.classList.remove('hide');\n    } else {\n      this.element.classList.add('hide');\n    }\n\n    // NOTE: ShadyDOM doesn't support slot.assignedElements, otherwise we could\n    // use that here.\n    this[$slot].assignedNodes().forEach((node) => {\n      if (node.nodeType !== Node.ELEMENT_NODE) {\n        return;\n      }\n\n      const element = node as HTMLElement;\n      // Visibility attribute can be configured per-node in the hotspot:\n      const visibilityAttribute = element.dataset.visibilityAttribute;\n\n      if (visibilityAttribute != null) {\n        const attributeName = `data-${visibilityAttribute}`;\n\n        // NOTE: IE11 doesn't support toggleAttribute\n        if (this[$visible]) {\n          element.setAttribute(attributeName, '');\n        } else {\n          element.removeAttribute(attributeName);\n        }\n      }\n\n      if (notify) {\n        element.dispatchEvent(new CustomEvent('hotspot-visibility', {\n          detail: {\n            visible: this[$visible],\n          },\n        }));\n      }\n    });\n  }\n\n  protected[$onSlotchange]() {\n    this[$updateVisibility]({notify: false});\n  }\n}"]}