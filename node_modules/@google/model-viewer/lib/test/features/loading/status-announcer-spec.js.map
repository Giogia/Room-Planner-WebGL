{"version":3,"file":"status-announcer-spec.js","sourceRoot":"","sources":["../../../../src/test/features/loading/status-announcer-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {LoadingMixin} from '../../../features/loading.js';\nimport {FINISHED_LOADING_ANNOUNCEMENT, INITIAL_STATUS_ANNOUNCEMENT, LoadingStatusAnnouncer} from '../../../features/loading/status-announcer.js';\nimport ModelViewerElementBase from '../../../model-viewer-base.js';\nimport {assetPath, isInDocumentTree, until, waitForEvent} from '../../helpers.js';\n\nconst expect = chai.expect;\n\nsuite('LoadingStatusAnnouncer', () => {\n  let nextId = 0;\n  let tagName: string;\n  let ModelViewerElement: any;\n  let loadingStatusAnnouncer: LoadingStatusAnnouncer;\n\n  setup(() => {\n    tagName = `model-viewer-loading-announcer-${nextId++}`;\n    ModelViewerElement = class extends LoadingMixin\n    (ModelViewerElementBase) {\n      static get is() {\n        return tagName;\n      }\n    };\n    customElements.define(tagName, ModelViewerElement);\n    loadingStatusAnnouncer = new LoadingStatusAnnouncer();\n  });\n\n  suite('when a model is registered', () => {\n    let element: any;\n    setup(() => {\n      element = new ModelViewerElement();\n      document.body.appendChild(element);\n    });\n\n    teardown(() => {\n      document.body.removeChild(element);\n    });\n\n    suite('that has a src', () => {\n      test('sets initial status', async () => {\n        element.poster = assetPath('../screenshot.png');\n        element.src = assetPath('models/Astronaut.glb');\n\n        loadingStatusAnnouncer.registerInstance(element);\n\n        await waitForEvent(loadingStatusAnnouncer, 'initial-status-announced');\n\n        const {statusElement} = loadingStatusAnnouncer;\n\n        expect(statusElement.textContent)\n            .to.be.equal(INITIAL_STATUS_ANNOUNCEMENT);\n      });\n\n      suite('after the model loads', () => {\n        test('sets the finished status', async () => {\n          element.src = assetPath('models/Astronaut.glb');\n\n          loadingStatusAnnouncer.registerInstance(element);\n\n          await Promise.all([\n            until(() => element.loaded),\n            waitForEvent(loadingStatusAnnouncer, 'finished-loading-announced')\n          ]);\n\n          const {statusElement} = loadingStatusAnnouncer;\n\n          expect(statusElement.textContent)\n              .to.be.equal(FINISHED_LOADING_ANNOUNCEMENT);\n        });\n      });\n\n      suite('there are other registered models', () => {\n        let otherElement: any;\n\n        setup(() => {\n          otherElement = new ModelViewerElement();\n          document.body.appendChild(otherElement);\n        });\n\n        teardown(() => {\n          document.body.removeChild(otherElement);\n        });\n\n        test('sets finished status when all models are loaded', async () => {\n          element.src = otherElement.src = assetPath('models/Astronaut.glb');\n\n          loadingStatusAnnouncer.registerInstance(element);\n          loadingStatusAnnouncer.registerInstance(otherElement);\n\n          await Promise.all([\n            until(() => element.loaded && otherElement.loaded),\n            waitForEvent(loadingStatusAnnouncer, 'finished-loading-announced')\n          ]);\n\n          const {statusElement} = loadingStatusAnnouncer;\n\n          expect(statusElement.textContent)\n              .to.be.equal(FINISHED_LOADING_ANNOUNCEMENT);\n        });\n\n        suite('one model is already loaded', () => {\n          test('eventually sets finished status', async () => {\n            element.src = assetPath('models/Astronaut.glb');\n\n            await until(() => element.loaded);\n\n            otherElement.src = assetPath('models/Astronaut.glb');\n\n            loadingStatusAnnouncer.registerInstance(element);\n            loadingStatusAnnouncer.registerInstance(otherElement);\n\n            await Promise.all([\n              until(() => otherElement.loaded),\n              waitForEvent(loadingStatusAnnouncer, 'finished-loading-announced')\n            ]);\n\n            const {statusElement} = loadingStatusAnnouncer;\n\n            expect(statusElement.textContent)\n                .to.be.equal(FINISHED_LOADING_ANNOUNCEMENT);\n          });\n        });\n\n        suite('one model fails', () => {\n          test('eventually sets finished status', async () => {\n            const errorOccurs = waitForEvent(element, 'error');\n\n            element.src = assetPath('models/DOES_NOT_EXIST.glb');\n            otherElement.src = assetPath('models/Astronaut.glb');\n\n            loadingStatusAnnouncer.registerInstance(element);\n            loadingStatusAnnouncer.registerInstance(otherElement);\n\n            await Promise.all([\n              errorOccurs,\n              until(() => otherElement.loaded),\n              waitForEvent(loadingStatusAnnouncer, 'finished-loading-announced')\n            ]);\n\n            const {statusElement} = loadingStatusAnnouncer;\n\n            expect(statusElement.textContent)\n                .to.be.equal(FINISHED_LOADING_ANNOUNCEMENT);\n          });\n        });\n      });\n    });\n  });\n\n  suite('many elements and first one is removed', () => {\n    let element: ModelViewerElementBase;\n    let otherElement: ModelViewerElementBase;\n\n    setup(() => {\n      // NOTE(cdata): We use ModelViewerElementBase here because we are\n      // testing behavior that is affected by connected/disconnected\n      // side-effects in LoadingMixin.\n      element = new ModelViewerElementBase();\n      otherElement = new ModelViewerElementBase();\n\n      document.body.appendChild(element);\n      document.body.appendChild(otherElement);\n    });\n\n    teardown(() => {\n      if (element.parentNode != null) {\n        document.body.removeChild(element);\n      }\n\n      if (otherElement.parentNode != null) {\n        document.body.removeChild(otherElement);\n      }\n    });\n\n    test('status element remains in the document tree', async () => {\n      const {statusElement} = loadingStatusAnnouncer;\n\n      loadingStatusAnnouncer.registerInstance(element);\n\n      expect(isInDocumentTree(statusElement)).to.be.equal(true);\n\n      loadingStatusAnnouncer.registerInstance(otherElement);\n\n      loadingStatusAnnouncer.unregisterInstance(element);\n      document.body.removeChild(element);\n\n      expect(isInDocumentTree(statusElement)).to.be.equal(true);\n      document.body.removeChild(otherElement);\n    });\n  });\n});\n"]}