{"version":3,"file":"magic-leap-spec.js","sourceRoot":"","sources":["../../../src/test/features/magic-leap-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MagicLeapInterface, MagicLeapMixin} from '../../features/magic-leap.js';\nimport ModelViewerElementBase from '../../model-viewer-base.js';\nimport {Constructor} from '../../utilities.js';\nimport {assetPath, pickShadowDescendant, timePasses} from '../helpers.js';\nimport {BasicSpecTemplate} from '../templates.js';\n\nconst expect = chai.expect;\n\nsuite('ModelViewerElementBase with MagicLeapMixin', () => {\n  suite('when registered', () => {\n    let nextId = 0;\n    let tagName: string;\n    let ModelViewerElement:\n        Constructor<ModelViewerElementBase&MagicLeapInterface>;\n\n    setup(() => {\n      tagName = `model-viewer-magic-leap-${nextId++}`;\n      ModelViewerElement = class extends MagicLeapMixin\n      (ModelViewerElementBase) {\n        static get is() {\n          return tagName;\n        }\n      };\n      customElements.define(tagName, ModelViewerElement);\n    });\n\n    BasicSpecTemplate(() => ModelViewerElement, () => tagName);\n\n    suite('magic-leap', () => {\n      suite('in standard browser environments', () => {\n        let element: ModelViewerElementBase&MagicLeapInterface;\n\n        setup(async () => {\n          element = new ModelViewerElement();\n          document.body.appendChild(element);\n          element.magicLeap = true;\n\n          // Wait at least a microtask for size calculations\n          await timePasses(1);\n        });\n\n        teardown(() => {\n          if (element.parentNode != null) {\n            element.parentNode.removeChild(element);\n          }\n        });\n\n        test('does not change model presentation', () => {\n          const presented = pickShadowDescendant(element);\n\n          expect(presented).to.be.ok;\n          expect(presented!.tagName).to.be.equal('CANVAS');\n        });\n      });\n\n      suite('in the Helios browser environment', () => {\n        let element: ModelViewerElementBase&MagicLeapInterface;\n\n        setup(async () => {\n          self.mlWorld = {};\n\n          element = new ModelViewerElement();\n          document.body.appendChild(element);\n          element.magicLeap = true;\n\n          // Wait at least a microtask for size calculations\n          await timePasses(10);\n        });\n\n        teardown(() => {\n          if (element.parentNode != null) {\n            element.parentNode.removeChild(element);\n          }\n          delete self.mlWorld;\n        });\n\n        test('shows an <ml-model>', () => {\n          const presented = pickShadowDescendant(element);\n          expect(presented).to.be.ok;\n          expect(presented!.tagName).to.be.equal('ML-MODEL');\n        });\n\n        suite('with a src property', () => {\n          setup(async () => {\n            element.src = assetPath('models/Astronaut.glb');\n            // Wait til microtask so that property changes can propagate\n            await timePasses();\n          });\n\n          test('sets the same src on the <ml-model>', () => {\n            const mlModel = pickShadowDescendant(element);\n            expect(mlModel).to.be.ok;\n            expect(mlModel!.getAttribute('src')).to.be.equal(element.src);\n          });\n        });\n      });\n    });\n  });\n});\n"]}