{"version":3,"file":"rendering-scenario.js","sourceRoot":"","sources":["../../../../src/test/fidelity/components/rendering-scenario.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;;;;AAEH,OAAO,EAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAC,MAAM,aAAa,CAAC;AAIvD,MAAM,kBAAkB,GAAe;IACrC,KAAK,EAAE,CAAC;IACR,MAAM,EAAE,CAAC;CACV,CAAC;AAEF,MAAM,OAAO,iBAAkB,SAAQ,UAAU;IAAjD;;QAC4B,SAAI,GAAW,EAAE,CAAC;QAElB,YAAO,GAAwB,EAAE,CAAC;QAElC,eAAU,GAAe,kBAAkB,CAAC;QAE7C,YAAO,GAAkB,EAAE,CAAC;IA2IvD,CAAC;IAzIC,IAAI,QAAQ;QACV,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO,EAAE,CAAC;SACX;QAED,OAAO,aAAa,IAAI,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAED,MAAM;QACJ,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,MAAM,EAAC,KAAK,EAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QAEhC,MAAM,MAAM,GAAG,CAAC;gBACC,IAAI,EAAE,cAAc;gBACpB,WAAW,EAAE,+BAA+B;gBAC5C,IAAI,EAAE,kBAAkB;aACzB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aAClB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACrD,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAA;;;UAGhC,MAAM,CAAC,WAAW;;;kBAGV,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI;sBACpB,KAAK,YAAY,QAAQ,IAAI,MAAM,CAAC,IAAI;OACvD,CAAC,CAAC;QAEL,OAAO,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwGT,IAAI,CAAC,IAAI;;IAEX,MAAM;OACH,CAAC;IACN,CAAC;CACF;AAjJ2B;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;+CAAmB;AAElB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;kDAAmC;AAElC;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;qDAA6C;AAE7C;IAAxB,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;kDAA6B;AA6IvD,cAAc,CAAC,MAAM,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {html, LitElement, property} from 'lit-element';\nimport {Dimensions, GoldenConfig} from '../common.js';\n\n\nconst DEFAULT_DIMENSIONS: Dimensions = {\n  width: 0,\n  height: 0\n};\n\nexport class RenderingScenario extends LitElement {\n  @property({type: String}) name: string = '';\n\n  @property({type: Object}) goldens: Array<GoldenConfig> = [];\n\n  @property({type: Object}) dimensions: Dimensions = DEFAULT_DIMENSIONS;\n\n  @property({type: Array}) exclude: Array<string> = [];\n\n  get basePath() {\n    if (!this.name) {\n      return '';\n    }\n\n    return `./results/${this.name}`;\n  }\n\n  render() {\n    const {basePath} = this;\n    const {width} = this.dimensions;\n\n    const images = [{\n                     name: 'model-viewer',\n                     description: '<model-viewer> (this version)',\n                     file: 'model-viewer.png'\n                   }].concat(this.goldens)\n                       .filter(golden => !this.exclude.includes(golden.name))\n                       .map(golden => html`\n<div class=\"screenshot\">\n  <header>\n    <h2>${golden.description}</h2>\n  </header>\n  <div class=\"check\"></div>\n  <img data-id=\"${this.name} ${golden.name}\"\n       style=\"width:${width}px\" src=\"${basePath}/${golden.file}\">\n</div>`);\n\n    return html`\n<style>\n:host {\n  display: inline-flex;\n  flex-direction: column;\n  flex: 0 1 auto;\n  position: relative;\n  margin: 1em;\n  padding: 1em;\n  border-radius: 3px;\n  box-shadow: 0px 2px 8px rgba(100, 100, 100, 0.2);\n  background-color: #fff;\n  color: #555;\n  font-family: Google Sans, sans-serif;\n}\n\nh1 {\n  font-size: 1.5em;\n  margin: 0.166em 0.33em 0.33em;\n}\n\n.screenshot > header {\n  display: block;\n  position: absolute;\n  width: 100%;\n  bottom: 1em;\n  left: 0;\n  text-align: center;\n\n  pointer-events: none;\n}\n\nh2 {\n  font-size: 1em;\n\n  display: inline-block;\n  box-sizing: border-box;\n\n  border-radius: 3px;\n  padding: 0.25em 0.5em;\n  margin: 0;\n\n  background-color: rgba(255, 255, 255, 0.75);\n  pointer-events: none;\n}\n\n#screenshots {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.screenshot {\n  box-sizing: border-box;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  object-fit: contain;\n  margin: 0.5em;\n  transition: transform 0.3s;\n}\n\n.screenshot > img {\n  max-width: 256px;\n  flex: 0 0 0;\n}\n\n.check {\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  box-sizing: bborder-box;\n  top: 0.5em;;\n  right: 0.5em;\n  width: 1em;\n  height: 1em;\n  border-radius: 2em;\n  border: 2px solid #fff;\n  background-color: #f8f8f8;\n}\n\n.selected .check {\n  background-color: #37474f;\n}\n\n.selected .check:after {\n  content: '';\n  display: block;\n  width: 0.25em;\n  height: 0.5em;\n  border: solid #fff;\n  border-width: 0 2px 2px 0;\n  transform: translate(-0em, -0.1em) rotate(45deg);\n}\n\n.selected {\n  transform: translateY(-0.5em) scale(1.025);\n  box-shadow: 0px 6px 12px rgba(100, 100, 100, 0.2);\n}\n</style>\n<h1>${this.name}</h1>\n<div id=\"screenshots\">\n  ${images}\n</div>`;\n  }\n}\n\ncustomElements.define('rendering-scenario', RenderingScenario);\n"]}