{"version":3,"file":"image-accessor.js","sourceRoot":"","sources":["../../../src/test/fidelity/image-accessor.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAGH,MAAM,MAAM,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACnE,MAAM,OAAO,GAA6B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;AAGnE,MAAM,OAAO,aAAa;IAiCxB,YAAsB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IACvC,CAAC;IAjCD,MAAM,CAAC,eAAe,CAAC,MAAmB,EAAE,KAAa,EAAE,MAAc;QAEvE,OAAO,IAAI,aAAa,CACpB,IAAI,SAAS,CAAC,IAAI,iBAAiB,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,KAAuB;QAC7C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC;QAClC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC;QACpC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,OAAO,IAAI,aAAa,CACpB,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,aAAa;QACX,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAClC,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,UAAU,CAAgB,CAAC;IAC3D,CAAC;IAED,UAAU,CAAC,CAAS,EAAE,CAAS;QAC7B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACnE,OAAO,OAAO,CAAC;SAChB;QAED,MAAM,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAE/B,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,KACxD,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;QAC3B,OAAO,KAAK,CAAC;IACf,CAAC;IAKD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC5B,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst canvas: HTMLCanvasElement = document.createElement('canvas');\nconst context: CanvasRenderingContext2D = canvas.getContext('2d')!;\n\n\nexport class ImageAccessor {\n  static fromArrayBuffer(buffer: ArrayBuffer, width: number, height: number):\n      ImageAccessor {\n    return new ImageAccessor(\n        new ImageData(new Uint8ClampedArray(buffer), width, height));\n  }\n\n  static fromImageElement(image: HTMLImageElement): ImageAccessor {\n    canvas.width = image.naturalWidth;\n    canvas.height = image.naturalHeight;\n    context.drawImage(image, 0, 0);\n    return new ImageAccessor(\n        context.getImageData(0, 0, canvas.width, canvas.height));\n  }\n\n  toArrayBuffer(): ArrayBuffer {\n    const {buffer} = this.source.data;\n    return buffer.slice(0, buffer.byteLength) as ArrayBuffer;\n  }\n\n  cssColorAt(x: number, y: number): string {\n    if (x < 0 || y < 0 || x > (this.width - 1) || y > (this.height - 1)) {\n      return 'black';\n    }\n\n    const position = (y * this.width + x) * 4;\n    const array = this.source.data;\n\n    const color = `rgb(${array[position]}, ${array[position + 1]}, ${\n        array[position + 2]})`;\n    return color;\n  }\n\n  constructor(protected source: ImageData) {\n  }\n\n  get width(): number {\n    return this.source.width;\n  }\n\n  get height(): number {\n    return this.source.height;\n  }\n}\n"]}