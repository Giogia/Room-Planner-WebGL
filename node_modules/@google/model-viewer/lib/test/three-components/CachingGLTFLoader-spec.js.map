{"version":3,"file":"CachingGLTFLoader-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/CachingGLTFLoader-spec.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AACH,OAAO,EAAC,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAC,MAAM,6CAA6C,CAAC;AAClH,OAAO,EAAC,SAAS,EAAC,MAAM,eAAe,CAAC;AAExC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,MAAM,kBAAkB,GAAG,SAAS,CAAC,sBAAsB,CAAC,CAAC;AAE7D,KAAK,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC9B,KAAK,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAChC,IAAI,MAAyB,CAAC;QAE9B,KAAK,CAAC,GAAG,EAAE;YACT,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,GAAG,EAAE;YACZ,iBAAiB,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,uBAAuB,EAAE,GAAG,EAAE;YAClC,IAAI,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;gBAC1D,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAClD,IAAI;oBACF,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;yBAC3D,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;iBAClB;wBAAS;oBACR,MAAM,SAAS,CAAC;iBACjB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,sBAAsB,EAAE,GAAG,EAAE;YACjC,IAAI,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;gBACtD,MAAM,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACtC,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;qBAC3D,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAClD,IAAI;gBACF,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;aAC9D;oBAAS;gBACR,MAAM,SAAS,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACpD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACvB,MAAM,CAAC,KAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACzD,IAAI,wBAAgC,CAAC;YAErC,KAAK,CAAC,GAAG,EAAE;gBACT,wBAAwB,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,iBAAiB,CAAC;gBACrE,MAAM,CAAC,eAAe,CAAC,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,GAAG,EAAE;gBACZ,MAAM,CAAC,eAAe,CAAC,CAAC,iBAAiB,GAAG,wBAAwB,CAAC;YACvE,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;gBAC/D,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAEpD,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC7D,KAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC;gBAC5B,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;YAChE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {$evictionPolicy, $releaseFromCache, CachingGLTFLoader} from '../../three-components/CachingGLTFLoader.js';\nimport {assetPath} from '../helpers.js';\n\nconst expect = chai.expect;\n\nconst ASTRONAUT_GLB_PATH = assetPath('models/Astronaut.glb');\n\nsuite('CachingGLTFLoader', () => {\n  suite('when loading a glTF', () => {\n    let loader: CachingGLTFLoader;\n\n    setup(() => {\n      loader = new CachingGLTFLoader();\n    });\n\n    teardown(() => {\n      CachingGLTFLoader.clearCache();\n    });\n\n    suite('before glTF is loaded', () => {\n      test('reports that it has not finished loading', async () => {\n        const fileLoads = loader.load(ASTRONAUT_GLB_PATH);\n        try {\n          expect(CachingGLTFLoader.hasFinishedLoading(ASTRONAUT_GLB_PATH))\n              .to.be.false;\n        } finally {\n          await fileLoads;\n        }\n      });\n    });\n\n    suite('after glTF is loaded', () => {\n      test('reports that it has finished loading', async () => {\n        await loader.load(ASTRONAUT_GLB_PATH);\n        expect(CachingGLTFLoader.hasFinishedLoading(ASTRONAUT_GLB_PATH))\n            .to.be.true;\n      });\n    });\n\n    test('synchronously populates the cache', async () => {\n      const fileLoads = loader.load(ASTRONAUT_GLB_PATH);\n      try {\n        expect(CachingGLTFLoader.has(ASTRONAUT_GLB_PATH)).to.be.true;\n      } finally {\n        await fileLoads;\n      }\n    });\n\n    test('yields a promise that resolves a scene', async () => {\n      const scene = await loader.load(ASTRONAUT_GLB_PATH);\n      expect(scene).to.be.ok;\n      expect(scene!.type).to.be.equal('Scene');\n    });\n\n    suite('with items outside of the eviction threshold', () => {\n      let naturalEvictionThreshold: number;\n\n      setup(() => {\n        naturalEvictionThreshold = loader[$evictionPolicy].evictionThreshold;\n        loader[$evictionPolicy].evictionThreshold = 0;\n      });\n\n      teardown(() => {\n        loader[$evictionPolicy].evictionThreshold = naturalEvictionThreshold;\n      });\n\n      test('deletinates them when they are fully released', async () => {\n        const scene = await loader.load(ASTRONAUT_GLB_PATH);\n\n        expect(CachingGLTFLoader.has(ASTRONAUT_GLB_PATH)).to.be.true;\n        scene![$releaseFromCache]();\n        expect(CachingGLTFLoader.has(ASTRONAUT_GLB_PATH)).to.be.false;\n      });\n    });\n  });\n});\n"]}