{"version":3,"file":"TextureUtils-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/TextureUtils-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Cache, WebGLRenderer} from 'three';\n\nimport TextureUtils from '../../three-components/TextureUtils.js';\nimport {assetPath, textureMatchesMeta} from '../helpers.js';\n\n\nconst expect = chai.expect;\n\n// Reuse the same canvas as to not stress the WebGL\n// context limit\nconst canvas = document.createElement('canvas');\nconst EQUI_URL = assetPath('environments/spruit_sunrise_1k_LDR.jpg');\nconst HDR_EQUI_URL = assetPath('environments/spruit_sunrise_1k_HDR.hdr');\n\nsuite('TextureUtils', () => {\n  let threeRenderer: WebGLRenderer;\n\n  suiteSetup(() => {\n    // The threeRenderer can retain state, so these tests have the possibility\n    // of getting different results in different orders. However, our use of the\n    // threeRenderer *should* always return its state to what it was before to\n    // avoid this kind of problem (and many other headaches).\n    threeRenderer = new WebGLRenderer({canvas});\n    threeRenderer.debug.checkShaderErrors = true;\n  });\n\n  suiteTeardown(() => {\n    // Ensure we free up memory from loading large environment maps:\n    Cache.clear();\n    threeRenderer.dispose();\n  });\n\n  let textureUtils: TextureUtils;\n\n  setup(() => {\n    textureUtils = new TextureUtils(threeRenderer);\n  });\n\n  teardown(async () => {\n    await textureUtils.dispose();\n  });\n\n\n  suite('load', () => {\n    test('loads a valid texture from URL', async () => {\n      let texture = await textureUtils.load(EQUI_URL);\n      texture.dispose();\n      expect((texture as any).isTexture).to.be.ok;\n      expect(textureMatchesMeta(\n                 texture, {mapping: 'Equirectangular', url: EQUI_URL}))\n          .to.be.ok;\n    });\n    test('loads a valid HDR texture from URL', async () => {\n      let texture = await textureUtils.load(HDR_EQUI_URL);\n      texture.dispose();\n      expect((texture as any).isTexture).to.be.ok;\n      expect(textureMatchesMeta(\n                 texture, {mapping: 'Equirectangular', url: HDR_EQUI_URL}))\n          .to.be.ok;\n    });\n    test('throws on invalid URL', async () => {\n      try {\n        await (textureUtils.load as any)(null);\n        expect(false).to.be.ok;\n      } catch (e) {\n        expect(true).to.be.ok;\n      }\n    });\n    test('throws if texture not found', async () => {\n      try {\n        await textureUtils.load('./nope.png');\n        expect(false).to.be.ok;\n      } catch (e) {\n        expect(true).to.be.ok;\n      }\n    });\n  });\n\n  suite('equirectangularToCubemap', () => {\n    test('creates a cubemap render target from texture', async () => {\n      const target = await textureUtils.loadEquirectAsCubeUV(EQUI_URL);\n      target.dispose();\n      expect((target.texture as any).isTexture).to.be.ok;\n      expect(textureMatchesMeta(\n                 target.texture, {mapping: 'CubeUV', url: EQUI_URL}))\n          .to.be.ok;\n      target.texture.dispose();\n    });\n    test('throws on invalid texture', async () => {\n      try {\n        await textureUtils.loadEquirectAsCubeUV('');\n        expect(false).to.be.ok;\n      } catch (e) {\n        expect(true).to.be.ok;\n      }\n    });\n  });\n\n  suite('generating an environment map and skybox', () => {\n    test('returns an environmentMap and skybox texture from url', async () => {\n      const textures =\n          await textureUtils.generateEnvironmentMapAndSkybox(EQUI_URL);\n      expect((textures.skybox!.texture as any).isTexture).to.be.ok;\n      expect((textures.environmentMap.texture as any).isTexture).to.be.ok;\n\n      expect(textureMatchesMeta(\n                 textures.skybox!.texture, {mapping: 'PMREM', url: EQUI_URL}))\n          .to.be.ok;\n\n      expect(textureMatchesMeta(textures.environmentMap.texture, {\n        mapping: 'PMREM',\n        url: EQUI_URL\n      })).to.be.ok;\n    });\n\n    test(\n        'returns an environmentMap and skybox texture from an HDR url',\n        async () => {\n          const textures =\n              await textureUtils.generateEnvironmentMapAndSkybox(HDR_EQUI_URL);\n          expect((textures.skybox!.texture as any).isTexture).to.be.ok;\n          expect((textures.environmentMap.texture as any).isTexture).to.be.ok;\n\n          expect(textureMatchesMeta(textures.skybox!.texture, {\n            mapping: 'PMREM',\n            url: HDR_EQUI_URL\n          })).to.be.ok;\n\n          expect(textureMatchesMeta(textures.environmentMap.texture, {\n            mapping: 'PMREM',\n            url: HDR_EQUI_URL\n          })).to.be.ok;\n        });\n\n    test(\n        'returns an environmentMap and skybox texture from two urls',\n        async () => {\n          const textures = await textureUtils.generateEnvironmentMapAndSkybox(\n              EQUI_URL, HDR_EQUI_URL);\n\n          expect((textures.skybox!.texture as any).isTexture).to.be.ok;\n          expect((textures.environmentMap.texture as any).isTexture).to.be.ok;\n\n          expect(textureMatchesMeta(textures.skybox!.texture, {\n            mapping: 'PMREM',\n            url: EQUI_URL\n          })).to.be.ok;\n\n          expect(textureMatchesMeta(textures.environmentMap.texture, {\n            mapping: 'PMREM',\n            url: HDR_EQUI_URL\n          })).to.be.ok;\n        });\n\n    test('throws if given an invalid url', async () => {\n      try {\n        await textureUtils.generateEnvironmentMapAndSkybox({} as string);\n        expect(false).to.be.ok;\n      } catch (e) {\n        expect(true).to.be.ok;\n      }\n    });\n  });\n\n  suite('dynamically generating environment maps', () => {\n    test('creates a cubemap render target with PMREM', async () => {\n      const {environmentMap} =\n          await textureUtils.generateEnvironmentMapAndSkybox();\n\n      expect(textureMatchesMeta(\n                 environmentMap!.texture, {mapping: 'PMREM', url: null}))\n          .to.be.ok;\n    });\n  });\n});\n"]}