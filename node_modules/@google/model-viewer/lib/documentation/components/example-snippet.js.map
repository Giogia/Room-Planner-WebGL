{"version":3,"file":"example-snippet.js","sourceRoot":"","sources":["../../../src/documentation/components/example-snippet.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'prismjs';\n\nimport {property} from 'lit-element';\nimport {UpdatingElement} from 'lit-element/lib/updating-element.js';\n\n// Silence tsc since prismjs isn't a proper module\ndeclare var Prism: any;\n\nconst EMPTY_ATTRIBUTE_RE = /([\\w-]+)=\\\"\\\"/g;\n\nexport type RootNode = Document|ShadowRoot;\n\n/**\n * ExampleSnippet is a custom element that enables documentation authors to\n * craft a single code snippet that is used for both human-readable\n * documentation and running a live demo.\n *\n * An example usage looks like this:\n *\n * <div id=\"demo-container\"></div>\n * <example-snippet stamp-to=\"demo-container\" highlight-as=\"html\">\n *   <template>\n * <script>\n *   console.log('This is how you log things to the console!');\n * </script>\n *   </template>\n * </example-snippet>\n *\n * The above example will create a <pre><code></code></pre> inside of itself\n * containing syntax-highlightable markup of the code in the template. It will\n * also create the content of the template as DOM and insert it into the node\n * indicated by the \"stamp-to\" attribute. The \"stamp-to\" attribute references\n * another node by its ID.\n *\n * Add the \"lazy\" boolean attribute if you want to stamp the example manually\n * by invoking its \"stamp\" method. Note that this will prevent the snippet from\n * stamping itself automatically upon being connected to the DOM.\n *\n * ExampleSnippet is a simplified alternative to Polymer Project's DemoSnippet.\n * The key differences are:\n *\n *  - ExampleSnippet does not use ShadowDOM by default\n *  - ExampleSnippet supports stamping demos to elements other than itself\n *\n * @see https://github.com/PolymerElements/iron-demo-helpers/blob/master/demo-snippet.js\n */\nexport class ExampleSnippet extends UpdatingElement {\n  @property({type: Boolean, attribute: 'use-shadow-root'})\n  useShadowRoot: boolean = false;\n  @property({type: String, attribute: 'stamp-to'}) stampTo: string|null = null;\n  @property({type: Object}) template: HTMLTemplateElement|null = null;\n  @property({type: String, attribute: 'highlight-as'})\n  highlightAs: string = 'markup';\n  @property({type: Boolean, attribute: 'lazy'}) lazy: boolean = false;\n  @property({type: Boolean}) preserveWhitespace: boolean = false;\n  @property({type: Boolean, attribute: 'inert-script'})\n  inertScript: boolean = false;\n\n  readonly stamped: boolean = false;\n\n  public stamp() {\n    if (this.stampTo == null || this.template == null) {\n      return;\n    }\n\n    const root = this.getRootNode()!;\n    const stampTarget = (root as RootNode).getElementById(this.stampTo);\n\n    if (stampTarget != null) {\n      let parentNode;\n\n      if (this.useShadowRoot) {\n        if (stampTarget.shadowRoot == null) {\n          stampTarget.attachShadow({mode: 'open'});\n        }\n\n        parentNode = stampTarget.shadowRoot!;\n      } else {\n        parentNode = stampTarget;\n      }\n\n      const {template, highlightAs} = this;\n      const content = template.content.cloneNode(true) as DocumentFragment;\n\n      if (this.inertScript) {\n        const scripts = Array.from(content.querySelectorAll('script'));\n        for (const script of scripts) {\n          script.parentNode!.removeChild(script);\n        }\n      }\n\n      parentNode.appendChild(content);\n\n      const pre = document.createElement('pre');\n      const code = document.createElement('code');\n\n      pre.appendChild(code);\n\n      let snippet = template.innerHTML;\n\n      snippet = snippet.replace('type=\"noexecute\" ', '');\n\n      if (!this.preserveWhitespace) {\n        snippet = snippet.trim();\n      }\n\n      if (highlightAs === 'html') {\n        snippet = snippet.replace(EMPTY_ATTRIBUTE_RE, '$1');\n      }\n\n      const highlighted =\n          Prism.highlight(snippet, Prism.languages[highlightAs], highlightAs);\n\n      code.innerHTML = highlighted;\n\n      this.appendChild(pre);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback && super.connectedCallback();\n    this.template = this.querySelector('template');\n  }\n\n  createRenderRoot() {\n    return this;\n  }\n\n  updated(changedProperties: Map<string, any>) {\n    super.updated(changedProperties);\n\n    if (!this.stamped && !this.lazy &&\n        (changedProperties.has('stamp-to') ||\n         changedProperties.has('template')) &&\n        this.template != null && this.stampTo != null) {\n      this.stamp();\n    }\n  }\n}\n\ncustomElements.define('example-snippet', ExampleSnippet);\n"]}