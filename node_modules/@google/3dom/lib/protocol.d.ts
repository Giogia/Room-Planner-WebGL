import { RGBA } from './api.js';
/**
 * The protocol between 3DOM execution contexts is strictly defined.
 * Only specific types of messages are allowed, and their types are
 * all included in the ThreeDOMMessageType map.
 */
export declare const ThreeDOMMessageType: {
    HANDSHAKE: number;
    IMPORT_SCRIPT: number;
    MODEL_CHANGE: number;
    MUTATION_RESULT: number;
    CONTEXT_INITIALIZED: number;
    MUTATE: number;
};
/**
 * Messages exchanged between a scene graph context and the host context.
 * They are distinguished by their type property.
 */
export declare interface ThreeDOMMessage {
    type: number;
}
/**
 * A message requesting that the scene graph context import a script by
 * URL.
 */
export declare interface ImportScriptMessage extends ThreeDOMMessage {
    url: string;
}
/**
 * A message informing the scene graph context that the current global model
 * has changed.
 */
export declare interface ModelChangedMessage extends ThreeDOMMessage {
    model: SerializedModel;
}
/**
 * A request from the scene graph context to mutate the scene graph. The
 * mutation ID distinguishes this request so that a corresponding response
 * can be handled in the future.
 */
export declare interface MutateMessage extends ThreeDOMMessage {
    id: number;
    property: string;
    value: unknown;
    mutationId: number;
}
export declare interface MutationResultMessage extends ThreeDOMMessage {
    mutationId: number;
    applied: boolean;
}
/**
 * A map of scene graph element types to interfaces for the serialized
 * representation of those types.
 */
export declare interface SerializedElementMap {
    'model': SerializedModel;
    'material': SerializedMaterial;
    'pbr-metallic-roughness': SerializedPBRMetallicRoughness;
}
/**
 * The serialized form of a ThreeDOMElement
 * @see api.ts
 */
export declare interface SerializedThreeDOMElement {
    id: number;
    name?: string;
}
/**
 * The serialized form of a PBRMetallicRoughness
 * @see api.ts
 */
export declare interface SerializedPBRMetallicRoughness extends SerializedThreeDOMElement {
    baseColorFactor: RGBA;
}
/**
 * The serialized form of a Material
 * @see api.ts
 */
export declare interface SerializedMaterial extends SerializedThreeDOMElement {
    pbrMetallicRoughness: SerializedPBRMetallicRoughness;
}
/**
 * The serialized form of a Model
 * @see api.ts
 */
export declare interface SerializedModel extends SerializedThreeDOMElement {
    modelUri: string;
    materials: Array<SerializedMaterial>;
}
