{"version":3,"file":"material.js","sourceRoot":"","sources":["../../../src/facade/three-js/material.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAOH,OAAO,EAAC,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAC,eAAe,EAAC,MAAM,wBAAwB,CAAC;AAGvD,MAAM,qBAAqB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAE7D;;;GAGG;AACH,MAAM,OAAO,QAAS,SAAQ,eAAe;IAG3C,YAAY,KAAiB,EAAE,QAAuB;QACpD,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAEvB,IAAI,CAAC,qBAAqB,CAAC,GAAG,IAAI,oBAAoB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACrC,CAAC;IAED,MAAM;QACJ,MAAM,UAAU,GAAgC,KAAK,CAAC,MAAM,EAAE,CAAC;QAC/D,UAAU,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;QACrE,OAAO,UAAgC,CAAC;IAC1C,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Material as ThreeMaterial} from 'three';\n\nimport {SerializedMaterial} from '../../protocol.js';\nimport {ModelGraft} from './model-graft.js';\n\nimport {PBRMetallicRoughness} from './pbr-metallic-roughness.js';\nimport {ThreeDOMElement} from './three-dom-element.js';\n\n\nconst $pbrMetallicRoughness = Symbol('pbrMetallicRoughness');\n\n/**\n * GraftMaterial\n * @see https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#material\n */\nexport class Material extends ThreeDOMElement {\n  protected[$pbrMetallicRoughness]: PBRMetallicRoughness;\n\n  constructor(graft: ModelGraft, material: ThreeMaterial) {\n    super(graft, material);\n\n    this[$pbrMetallicRoughness] = new PBRMetallicRoughness(graft, material);\n  }\n\n  get pbrMetallicRoughness() {\n    return this[$pbrMetallicRoughness];\n  }\n\n  toJSON(): SerializedMaterial {\n    const serialized: Partial<SerializedMaterial> = super.toJSON();\n    serialized.pbrMetallicRoughness = this.pbrMetallicRoughness.toJSON();\n    return serialized as SerializedMaterial;\n  }\n}\n"]}