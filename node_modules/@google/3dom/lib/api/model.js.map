{"version":3,"file":"model.js","sourceRoot":"","sources":["../../src/api/model.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAUH;;;;;;;;;GASG;AACH,MAAM,UAAU,WAAW,CAAC,eAA6C;;IAEvE,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IAEjC;;;;;OAKG;IACH,MAAM,KAAM,SAAQ,eAAe;QAIjC,YAAY,MAAmB,EAAE,UAA2B;YAC1D,KAAK,CAAC,MAAM,CAAC,CAAC;YAHP,QAAY,GAA8B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAInE,IAAI,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;YAEvB,KAAK,MAAM,QAAQ,IAAI,UAAU,CAAC,SAAS,EAAE;gBAC3C,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;aACjD;QACH,CAAC;QAED;;;;;;WAMG;QACH,IAAI,SAAS;YACX,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACrD,CAAC;QAED;;WAEG;QACH,IAAI,UAAU;YACZ,OAAO,SAAS,CAAC;QACnB,CAAC;KACF;SA5BW,UAAU;IA8BtB,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ConstructedWithArguments, Constructor, Material, Model as ModelInterface, ThreeDOMElement} from '../api.js';\nimport {SerializedModel} from '../protocol.js';\n\nimport {ModelKernel} from './model-kernel.js';\n\nexport type ModelConstructor = Constructor<ModelInterface>&\n    ConstructedWithArguments<[ModelKernel, SerializedModel]>;\n\n/**\n * A constructor factory for a Model class. The Model is defined based on a\n * provided implementation for all specified 3DOM scene graph element types.\n *\n * The sole reason for using this factory pattern is to enable sound type\n * checking while also providing for the ability to stringify the factory so\n * that it can be part of a runtime-generated Worker script.\n *\n * @see ../api.ts\n */\nexport function defineModel(ThreeDOMElement: Constructor<ThreeDOMElement>):\n    ModelConstructor {\n  const $materials = Symbol('material');\n  const $kernel = Symbol('kernel');\n\n  /**\n   * A Model is the root element of a 3DOM scene graph. It is considered the\n   * element of provenance for all other elements that participate in the same\n   * graph. All other elements in the graph can be accessed in from the Model\n   * in some fashion.\n   */\n  class Model extends ThreeDOMElement implements ModelInterface {\n    protected[$kernel]: ModelKernel;\n    protected[$materials]: Readonly<Array<Material>> = Object.freeze([]);\n\n    constructor(kernel: ModelKernel, serialized: SerializedModel) {\n      super(kernel);\n      this[$kernel] = kernel;\n\n      for (const material of serialized.materials) {\n        this[$kernel].deserialize('material', material);\n      }\n    }\n\n    /**\n     * The set of Material elements in the graph, in sparse traversal order.\n     * Note that this set will include any Materials that are not part of the\n     * currently activate scene.\n     *\n     * TODO(#1002): This value needs to be sensitive to scene graph order\n     */\n    get materials() {\n      return this[$kernel].getElementsByType('material');\n    }\n\n    /**\n     * A Model has no owner model; it owns itself.\n     */\n    get ownerModel() {\n      return undefined;\n    }\n  }\n\n  return Model;\n}\n"]}