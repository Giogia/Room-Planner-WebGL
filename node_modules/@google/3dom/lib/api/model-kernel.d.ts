import { ConstructedWithArguments, Constructor, Material, Model, PBRMetallicRoughness, ThreeDOMElement, ThreeDOMElementMap } from '../api.js';
import { SerializedElementMap, SerializedMaterial, SerializedModel, SerializedPBRMetallicRoughness } from '../protocol.js';
export interface ModelKernelInterface {
    readonly model: Model;
    mutate(element: ThreeDOMElement, property: string, value: unknown): Promise<void>;
    deserialize<T extends keyof ThreeDOMElementMap>(type: T, serialized: SerializedElementMap[T]): ThreeDOMElementMap[T];
    getElementsByType<T extends keyof ThreeDOMElementMap>(type: T): Array<ThreeDOMElementMap[T]>;
    deactivate(): void;
}
export declare type ModelKernelConstructor = Constructor<ModelKernelInterface> & ConstructedWithArguments<[MessagePort, SerializedModel]>;
export declare type ModelKernel = InstanceType<ModelKernelConstructor>;
declare type ModelConstructor = Constructor<Model> & ConstructedWithArguments<[ModelKernelInterface, SerializedModel]>;
declare type MaterialConstructor = Constructor<Material> & ConstructedWithArguments<[ModelKernelInterface, SerializedMaterial]>;
declare type PBRMetallicRoughnessConstructor = Constructor<PBRMetallicRoughness> & ConstructedWithArguments<[ModelKernelInterface, SerializedPBRMetallicRoughness]>;
/**
 * A constructor factory for a ModelKernel class. The ModelKernel is defined
 * based on a provided implementation for all specified 3DOM scene graph
 * element types.
 *
 * The sole reason for using this factory pattern is to enable sound type
 * checking while also providing for the ability to stringify the factory so
 * that it can be part of a runtime-generated Worker script.
 */
export declare function defineModelKernel(Model: ModelConstructor, Material: MaterialConstructor, PBRMetallicRoughness: PBRMetallicRoughnessConstructor): ModelKernelConstructor;
export {};
