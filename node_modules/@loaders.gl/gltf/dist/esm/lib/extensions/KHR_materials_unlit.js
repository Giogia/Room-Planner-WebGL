import GLTFScenegraph from '../gltf-scenegraph';
import { KHR_MATERIALS_UNLIT } from '../gltf-constants';
export function decode(gltfData, options) {
  var gltfScenegraph = new GLTFScenegraph(gltfData);
  var json = gltfScenegraph.json;
  gltfScenegraph.removeExtension(KHR_MATERIALS_UNLIT);
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (json.materials || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var material = _step.value;
      var extension = material.extensions && material.extensions.KHR_materials_unlit;

      if (extension) {
        material.unlit = true;
      }

      gltfScenegraph.removeObjectExtension(material, KHR_MATERIALS_UNLIT);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator["return"] != null) {
        _iterator["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}
export function encode(gltfData, options) {
  var gltfScenegraph = new GLTFScenegraph(gltfData);
  var json = gltfScenegraph.json;

  if (gltfScenegraph.materials) {
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = json.materials[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var material = _step2.value;

        if (material.unlit) {
          delete material.unlit;
          gltfScenegraph.addObjectExtension(material, KHR_MATERIALS_UNLIT);
          gltfScenegraph.addExtension(KHR_MATERIALS_UNLIT);
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
          _iterator2["return"]();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  }
}
//# sourceMappingURL=KHR_materials_unlit.js.map